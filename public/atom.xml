<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Craig Kerstiens]]></title>
  <link href="http://www.craigkerstiens.com/atom.xml" rel="self"/>
  <link href="http://www.craigkerstiens.com/"/>
  <updated>2015-12-27T09:06:05-08:00</updated>
  <id>http://www.craigkerstiens.com/</id>
  <author>
    <name><![CDATA[Craig Kerstiens]]></name>
    <email><![CDATA[craig.kerstiens@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Postgres 9.5 - The feature rundown]]></title>
    <link href="http://www.craigkerstiens.com/2015/12/27/postgres-9-5-feature-rundown/"/>
    <updated>2015-12-27T00:00:00-08:00</updated>
    <id>http://www.craigkerstiens.com/2015/12/27/postgres-9-5-feature-rundown</id>
    <content type="html"><![CDATA[<p>The headline of Postgres 9.5 is undoubtedly: Insert&hellip; on conflict do nothing/update or more commonly known as Upsert or Merge. This removes one of the last remaining features which other databases had over Postgres. Sure we&rsquo;ll take a look at it, but first let&rsquo;s browse through some of the other features you can look forward to when Postgres 9.5 lands:</p>

<!--more-->


<h3>Grouping sets, cube, rollup</h3>

<p>Pivoting in Postgres has <a href="http://www.craigkerstiens.com/2013/06/27/Pivoting-in-Postgres/">sort of been possible</a> as has rolling up data, but it required you to know what those values and what you were projecting to, to be known. With the new functionality to allow you to group various sets together rollups as you&rsquo;d normally expect to do in something like Excel become trivial.</p>

<p>So now instead you simply add the grouping type just as you would on a normal group by:</p>

<pre><code>SELECT department, role, gender, count(*)
FROM employees
GROUP BY your_grouping_type_here;
</code></pre>

<p>By simply selecting the type of rollup you want to do Postgres will do the hard work for you. Let&rsquo;s take a look at the given example of department, role, gender:</p>

<ul>
<li><code>grouping sets</code> will project out the count for each specific key. As a result you&rsquo;d get each department key, with other keys as null, and the count for each that met that department.</li>
<li><code>cube</code> will give you the same values as above, but also the rollups of every individual combination. So in addition to the total for each department, you&rsquo;d get breakups by the department and gender, and department and role, and department and role and gender.</li>
<li><code>rollup</code> will give you a slightly similar version to cube but only give you the detailed groupings in the order they&rsquo;re presented. So if you specified <code>roll (department, role, gender)</code> you&rsquo;d have no rollup for department and gender alone.</li>
</ul>


<p><em>Check the what&rsquo;s new wiki for a bit more clarity on <a href="https://wiki.postgresql.org/wiki/What's_new_in_PostgreSQL_9.5#GROUPING_SETS.2C_CUBE_and_ROLLUP">examples and output</a></em></p>

<h3>Import foreign  schemas</h3>

<p>I only use foreign tables about once a month, but when I do use them they&rsquo;ve inevitably saved many hours of creating a one off ETL process. Even still the effort to setup new foreign tables has shown a bit of their infancy in Postgres. Now once you&rsquo;ve setup your foreign database, you can import the schema, either all of it or specific tables you prefer.</p>

<p>It&rsquo;s as simple as:</p>

<pre><code>IMPORT FOREIGN SCHEMA public
FROM SERVER some_other_db INTO reference_to_other_db;
</code></pre>

<h3>pg_rewind</h3>

<p>If you&rsquo;re managing your own Postgres instance for some reason and running HA, pg_rewind could become especially handy. Typically to spin up replication you have to first download the physical, also known as base, backup. Then you have to replay the Write-Ahead-Log or WAL–so it&rsquo;s up to date then you actually flip on replication.</p>

<p>Typically with databases when you fail over you shoot the other node in the head or <a href="https://en.wikipedia.org/wiki/STONITH">STONITH</a>. This means just get rid of it, completely throw it out. This is still a good practice, so bring it offline, make it inactive, but from there now you could then flip it into a mode and us pg_rewind. This could save you pulling down lots and lots of data to get a replica back up once you have failed over.</p>

<h3>Upsert</h3>

<p>Upsert of course will be the highlight of Postgres 9.5. I already talked about it some when <a href="http://www.craigkerstiens.com/2015/05/08/upsert-lands-in-postgres-9.5/">it initially landed</a>. The short of it is, if you&rsquo;re inserting a record and there&rsquo;s a conflict, you can choose to:</p>

<ul>
<li>Do nothing</li>
<li>Do some form of update</li>
</ul>


<p>Essentially this will let you have the typically experience of create or update that most frameworks provide but without a potential race condition of incorrect data.</p>

<h3>JSONB pretty</h3>

<p>There&rsquo;s a few updates <a href="https://wiki.postgresql.org/wiki/What's_new_in_PostgreSQL_9.5#JSONB-modifying_operators_and_functions">to JSONB</a>. The one I&rsquo;m most excited about is making JSONB output in psql read much more legibly.</p>

<p>If you&rsquo;ve got a JSONB field just give it a try with:</p>

<pre><code>SELECT jsonb_pretty(jsonb_column)
FROM foo;
</code></pre>

<h3>Give it a try</h3>

<p>Just in time for the new year <a href="http://www.postgresql.org/about/news/1631/">the RC is ready</a> and you can get hands on with it. Give it a try, and if there&rsquo;s more you&rsquo;d like to hear about Postgres please feel free to drop me a note <a href="mailto:craig.kerstiens@gmail.com">craig.kerstiens@gmail.com</a>.</p>

<script type="text/javascript">
  (function() {
    window._pa = window._pa || {};
    // _pa.orderId = "myOrderId"; // OPTIONAL: attach unique conversion identifier to conversions
    // _pa.revenue = "19.99"; // OPTIONAL: attach dynamic purchase values to conversions
    // _pa.productId = "myProductId"; // OPTIONAL: Include product ID for use with dynamic ads
    var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.async = true;
    pa.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + "//tag.marinsm.com/serve/517fd07cf1409000020002dc.js";
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);
  })();
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Going from blog posts to full launches]]></title>
    <link href="http://www.craigkerstiens.com/2015/12/26/from-blog-posts-to-launches/"/>
    <updated>2015-12-26T00:00:00-08:00</updated>
    <id>http://www.craigkerstiens.com/2015/12/26/from-blog-posts-to-launches</id>
    <content type="html"><![CDATA[<p>I recall extremely early stage where you&rsquo;d build a feature, realize it was awesome, then the next day write a blog post for it. At some point you start to move from that to more coordinated launches. A larger coordinated launch allows you to reach a bigger audience, can lead to bigger deals, and help expand your overall market. But perhaps more importantly by the time you hit full launch you&rsquo;ve message tested and ensured it&rsquo;s going to resonate in the way you expect.</p>

<p><em>The process itself will both help amplify and validate/refine your message</em></p>

<p>This is often a more gradual process than a sudden single change, you&rsquo;ll introduce new parts of this in time. And for many what an entire launch process looks like comes by trial an error, to help shorten that learning curve here&rsquo;s key areas I pay attention for a launch and process followed by a rough timeline.</p>

<!--more-->


<h3>Product first</h3>

<p>Making sure the product is in the right shape is key to any big launch. You don&rsquo;t get a second shot and if the product isn&rsquo;t in shape customers often won&rsquo;t take a second look alter when it it. For this reason I strongly prefer to have your product locked and loaded before you even start talking launch times, or at least be in the bug clean up phase. This means you&rsquo;ve built a feature, validated with alpha users or private beta, and are ready to open it up to the world.</p>

<p>If you have to set a launch date without the product or feature being already done allow padding. Sometimes it&rsquo;s good for the team to know the padding, sometimes it isn&rsquo;t. When you have extra time it&rsquo;s not uncommon for your development to magically consume exactly that amount of time and still result in a small scramble towards the end.</p>

<p>A good driver I&rsquo;ve found is needing to have it fully like to demo a few weeks out from the launch itself, such as during <a href="">analyst pre-briefings</a>.</p>

<h3>Crafting your message</h3>

<p>Every launch is an opportunity to tell your core message and value prop. If you miss this opportunity for focusing on a single narrow feature you&rsquo;ve missed the biggest opportunity you had in a launch. You can&rsquo;t relaunch your full product every time though–you do need some big improvements or feature that you can highlight, but you should still hit your core message.</p>

<p>First you should know that your feature solves some specific problem, you should know this from the alpha/beta testing and if it doesn&rsquo;t solve this problem <a href="http://www.craigkerstiens.com/2014/08/13/when-to-ship-when-to-kill/">you&rsquo;re not ready to launch</a>. Yes, some people will launch a product before the product is completely there–this is common in a marketing driven company as opposed to a product/engineering driven company.</p>

<p>Your message should lead with the problem you&rsquo;re solving, not the laundry list of features. The best launches lead with some  broader thematic message, even better if it&rsquo;s an altruistic world changing one. A rough example of this:</p>

<p>To the point to the product, and probably over generalized as boring:</p>

<ul>
<li>Connectify brings a new way of taking your dumb devices at home and turning them into intelligent connected devices.</li>
</ul>


<p>In contrast, broad thematic message, followed lightly by the product.</p>

<ul>
<li>We live in a connected world, and with new connected devices there&rsquo;s the opportunity not just give you more data but help you improve how you live your life. Connectify helps you at bringing the devices that matter together with ease.</li>
</ul>


<h3>Testing your message</h3>

<p>You should treat your message just like a product, testing it gradually along the way. Once you&rsquo;ve got some initial framing of it, test it internally, then with friendly customers or community members. Leading up to the launch I usually have a timeline and get all the content and communication rolling about 3 weeks out. I&rsquo;ll give a bit of a timeline below but first some more around message testing</p>

<h4>Analysts</h4>

<p>If you regularly use <a href="http://www.craigkerstiens.com/2015/07/25/A-guide-to-analyst-relations-for-startups/">any analysts</a> you should absolutely use them to help with a launch. Several weeks out is a great time to test key messages with them, get feedback, and if you&rsquo;re lucky you may even get them to provide a quote for the launch.</p>

<p>Keep in mind here a inquiry is an opportunity to test your message and get feedback. You should talk roughly half of the time here, they should be talking the other half. In contrast briefings before launch you should have your message fully baked and should simply be pitching your message and possibly demo-ing.</p>

<h4>Friendlies</h4>

<p>This may be more contentious, but at least at early stage sharing drafts with friendly community members is a great way to get feedback and refine your message. Here you should be especially concious of the request of their time and expect to have some delay before they get back to you. Being top secret about your message ahead of time won&rsquo;t add much value to it being a home run, where as better ensuring it resonates will help it to be more successful.</p>

<h4>Customers</h4>

<p>Customers I call out as a separate bucket. Customers have less incentive to leak your news than friendlies, but also fall somewhere on the other spectrum of analysts. A key piece about customers is there is an opportunity for them to be a launch partner. And so on to that topic:</p>

<h3>Launch partners</h3>

<p>Press and others like seeing and knowing you have external validation. Similarly many see the benefit of being part of a launch, after all it&rsquo;s more free press for them. For a launch partner there are various levels, though for most providing some quote is a pretty common level.</p>

<p>The best way to do this is talk to them about what they like about the feature/product and take a first stab at the quote for them from their feedback. Some may very much want to wordsmith their own which is fine, but minimizing the work required of them while–trying to hit something they&rsquo;d say as well–as a message that flows can best be done by you taking a first pass.</p>

<p>Further there&rsquo;s varying levels of value with quotes and references. In descending order:</p>

<ol>
<li>Customers</li>
<li>Analysts</li>
<li>Community Members</li>
</ol>


<h3>The other details</h3>

<p>During launch week I mostly want to be dotting i&rsquo;s and crossing t&rsquo;s, meaning: I want the product done. I want documentation done. I want the blog post finalized. I want to be in the mode of send internal announcements, prep internal teams, talk to media.</p>

<h4>Prepping internal teams</h4>

<p>Obviously the engineering and product people involved will be in the loop. But you need to notify many others some of which should have been in the loop already, some less so:</p>

<ul>
<li>Support &ndash; There&rsquo;s a new product surface area, support should be top of your list so they can field the tickets and questions that come in</li>
<li>Sales &ndash; Even if there is no price change or impact, new features allow sales to communicate value to customers</li>
</ul>


<h3>Timeline</h3>

<p>Finally what&rsquo;s the end to end timeline look like with all the little details. Here&rsquo;s a rough one that&rsquo;s fully built out. IF you&rsquo;re smaller and don&rsquo;t have a regular cadence of analysts in hand then just expect that doesn&rsquo;t apply. IF your support team is the product and engineers maybe that&rsquo;s lighter weight. Basically feel free to take out parts, but expect your process to grow to something of this size.</p>

<ul>
<li>4 weeks out &ndash; Outline of blog post with key messages</li>
<li>Test that outline internally</li>
<li>3 weeks out &ndash; Start to get a rough draft in place</li>
<li>3 weeks out &ndash; Share internally and with friendlies. At this point you&rsquo;re explicitely looking for message feedback. Tell people to not waste time on nitpicks of words or grammar, it will be 98% re-written by the time you&rsquo;re done</li>
<li>2.5 weeks out &ndash; Analyst inquiries for message testing</li>
<li>2.5 weeks out &ndash; Start putting together product demo</li>
<li>2 weeks out &ndash; Start putting together documentation</li>
<li>2 weeks out &ndash; Start nailing down blog post for final messages</li>
<li>1 weeks out &ndash; Start to put final touches on blog post for grammar</li>
<li>1 week out &ndash; Analyst briefings</li>
<li>1 week out &ndash; Update support</li>
<li>3-5 days out &ndash; Stage blog post</li>
<li>3-5 days out &ndash; Stage new documentation</li>
<li>2-4 days out &ndash; Make sure PRs are ready or feature flags, in short the switch is there or live but not public</li>
<li>1-3 days out &ndash; Update sales</li>
<li>1-3 days out &ndash; Interall communication to all@</li>
<li>1-3 days out &ndash; Media briefings</li>
<li>LAUNCH DAY &ndash; Sit in a room and watch all the things, engage with twitter/HN/etc.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Postgres and Node - Hands on using Postgres as a Document Store with MassiveJS]]></title>
    <link href="http://www.craigkerstiens.com/2015/12/08/massive-json/"/>
    <updated>2015-12-08T00:00:00-08:00</updated>
    <id>http://www.craigkerstiens.com/2015/12/08/massive-json</id>
    <content type="html"><![CDATA[<p>JSONB in Postgres is absolutely awesome, but it&rsquo;s taken a little while for libraries to come around to make it as useful as would be ideal. For those not following along with Postgres lately, here&rsquo;s the quick catchup for it as a NoSQL database.</p>

<ul>
<li>In Postgres 8.3 over 5 years ago Postgres received <a href="http://www.craigkerstiens.com/2013/07/03/hstore-vs-json/">hstore a key/value</a> store directly in Postgres. It&rsquo;s big limitation was it was only for text</li>
<li>In the years after it got GIN and GiST indexes to make queries over hstore extremely fast indexing the entire collection</li>
<li>In Postgres 9.2 we got JSON&hellip; sort of. Really this way only text validation, but allowed us to create some <a href="http://www.craigkerstiens.com/2013/05/29/postgres-indexes-expression-or-functional-indexes/">functional indexes</a> which were still nice.</li>
<li>In Postgres 9.4 we got JSONB &ndash; the B stands for Better according to <a href="http://www.twitter.com/leinweber">@leinweber</a>. Essentially this is a full binary JSON on disk, which can perform as fast as other NoSQL databases using JSON.</li>
</ul>


<!--more-->


<p>This is all great, but when it comes to using JSON you need a library that plays well here. As you might have guessed it from <a href="http://www.craigkerstiens.com/2015/11/30/massive-node-postgres-an-overview-and-intro/">my previous post this is where MassiveJS comes in</a>. Most ORMs take a more legacy approach to <a href="http://www.craigkerstiens.com/2014/01/24/rethinking-limits-on-relational/">how they work with the database</a>, in contrast the other side of the world believes in document only storage way is the future. In contrast Postgres believes there is a time and place for everything, just like Massive, except it believes Postgres is the path <a href="http://www.craigkerstiens.com/2012/04/30/why-postgres/">just as I do</a>.</p>

<p>Alright, enough context, let&rsquo;s take a look.</p>

<h3>Getting all setup</h3>

<p>First go ahead and create a database, let&rsquo;s call it massive, and then let&rsquo;s connect to it and create our example table:</p>

<pre><code>$ createdb massive
$ psql massive
# create table posts (id serial primary key, body jsonb);
</code></pre>

<p>Now that we&rsquo;ve got our database setup let&rsquo;s seed it with some data. If you want you can simple hop over to the github repo and pull it down then run <code>node load_json.js</code> to load the example data. A quick look at it, given an <code>example.json</code> file we&rsquo;re going to iterate over it. For each record in there, we&rsquo;re going to call saveDoc. Based on our table which has a unique id key and a body jsonb field it&rsquo;ll simply save our JSON document into that table:</p>

<pre><code>var parsedJSON = require('./example.json');

for(i = 0; i &lt; parsedJSON.posts.length; i++) {
    db.saveDoc("posts", parsedJSON.posts[1], function(err,res){});
};
</code></pre>

<p><em>If you want to just take a look at this <a href="https://github.com/craigkerstiens/json_node_example">github repo</a>, once you create a database you can run <code>node load_json.js</code> to seed it.</em></p>

<h3>Why JSON at all?</h3>

<p>JSON data is all over the place, in many cases it&rsquo;s fast and flexible and allows you to move more quickly. Yes, much of the time normalizing your data can be useful, but there is something to be said for expediency saving some data and querying across it. Querying across some giant document also used to be much more expensive, but now with JSONB and it&rsquo;s indexes that can be extremely fast.</p>

<h3>Querying</h3>

<p>So how do we go about querying? Well it&rsquo;s pretty simple with Massive, they provide a nice <code>findDoc</code> function to let you just search for contents of a specific key within the document. Let&rsquo;s say I wanted to pull back all posts that are in the Postgres category, well it&rsquo;s as simple as:</p>

<pre><code>db.posts.findDoc({title : 'Postgres'}, function(err,docs){
    console.log(docs);
});
</code></pre>

<p>The real beauty of this is if you added a GIN index (which will index the entire document) this query will be <a href="http://obartunov.livejournal.com/175235.html">quite performant</a>.</p>

<p><em>Just make sure to add your GIN index</em>:</p>

<pre><code>CREATE INDEX idx_posts ON posts USING GIN(body jsonb_path_ops); 
CREATE INDEX idx_posts_search ON posts USING GIN(search);  
</code></pre>

<p>But even better, with Massive it&rsquo;ll automatically add these for you if you just start saving docs. It will automatically create the table and appropriate indexes, just doing the correct thing out of the box.</p>

<h3>Full text and JSON</h3>

<p>Cool, so you can do an exact look up. Which is great when you&rsquo;re matching a category&hellip; which could be easily normalized. It&rsquo;s great when you&rsquo;re matching numbers, which also could likely reside in their own column. But what about when you&rsquo;re searching over a large document, or a set of keys within some document which may require several joins, or indeterminate data structure, well you may want to search for the presence of that string at all. As you may have guessed this is quite trivial.</p>

<pre><code>db.posts.searchDoc({
    keys : ["title", "category"],
    term : ["Postgres"]
}, function(err,docs){
    console.log(docs);
})
</code></pre>

<p>Hopefully it&rsquo;s pretty straight forward, but to be very clear. Call out the document table you want to search, then the keys you&rsquo;ll want to include in the search, then the term. This will search for any place the contents that string are found in matching values for those keys.</p>

<p>Which will nicely yield the expected documents:</p>

<pre><code>[ { link: 'http://www.craigkerstiens.com/2015/05/08/upsert-lands-in-postgres-9.5/',
    title: 'Upsert Lands in PostgreSQL 9.5 – a First Look',
    category: 'Postgres',
    comments: [ [Object] ],
    id: 2 },
  { link: 'http://www.craigkerstiens.com/2015/11/30/massive-node-postgres-an-overview-and-intro/',
    title: 'Node, Postgres, MassiveJS - a Better Database Experience',
    id: 3 } ]
</code></pre>

<h3>In conclusion</h3>

<p>While Massive isn&rsquo;t perfect, its approach to storing queries in files, using the schema vs. having to define your models in code and the database, and it&rsquo;s smooth document integration makes it a real contender as a better database library when working with Node. Give it a try and let me know your thoughts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node, Postgres, MassiveJS - A better database experience]]></title>
    <link href="http://www.craigkerstiens.com/2015/11/30/massive-node-postgres-an-overview-and-intro/"/>
    <updated>2015-11-30T00:00:00-08:00</updated>
    <id>http://www.craigkerstiens.com/2015/11/30/massive-node-postgres-an-overview-and-intro</id>
    <content type="html"><![CDATA[<p>First some background–I&rsquo;ve always had a bit of a love hate relationship with ORMs. ORMs are great for basic crud applications, which inevitably happens at some point for an app. The main two problems I have with ORMs is:</p>

<ol>
<li>They treat all databases as equal (yes, this is a little overgeneralized but typically true). They claim to do this for database portability, but in reality an app still can&rsquo;t just up and move from one to another.</li>
<li>They don&rsquo;t handle complex queries well at all. As someone that sees SQL as a very powerful language, taking away all the power just leaves me with pain.</li>
</ol>


<p><em>Of course these aren&rsquo;t the <a href="https://kev.inburke.com/kevin/faster-correct-database-queries/">only issues</a> with them, just the two ones I personally run into over and over.</em></p>

<p>In some playing with Node I was optimistic to explore <a href="http://massive-js.readthedocs.org">Massive.JS</a> as it seems to buck the trend of just imitating all other ORMs. My initial results–it makes me want to do more with Node just for this library. After all the power of a language is the ecosystem of libraries around it, not just the core language. So let&rsquo;s take a quick tour through with a few highlights of what makes it really great.</p>

<!--more-->


<h3>Getting setup</h3>

<p>Without further adieu here&rsquo;s a quick tour around it.</p>

<p>First let&rsquo;s pull down the example database from <a href="http://postgresguide.com/setup/example.html">PostgresGuide</a></p>

<p>Then let&rsquo;s setup out Node app:</p>

<pre><code>$ npm init
$ npm install massive --save
</code></pre>

<h3>Connecting and querying</h3>

<p>Now let&rsquo;s try to connect and say query a user from within our database. Create the following as an <code>index.js</code> file, then run with <code>node index.js</code>:</p>

<pre><code>var massive = require("massive");
var connectionString = "postgres://ckerstiens:@localhost/example";

var db = massive.connectSync({connectionString : connectionString});

db.users.find(1, function(err,res){
  console.log(res);
});
</code></pre>

<p>Upon first run if you&rsquo;re like me and use the <a href="http://postgresguide.com/setup/example.html">PostgresGuide example database</a> (which I now need to go back and tidy up), you&rsquo;ll get the following:</p>

<pre><code>db.users.find(1, function(err,res){
        ^
TypeError: Cannot read property 'find' of undefined
</code></pre>

<p>I can&rsquo;t describe how awesome it is to see this. What&rsquo;s happening is when Massive loads up it&rsquo;s connecting to your database, checking what tables you have. In this case though because we don&rsquo;t have a proper primary key defined it doesn&rsquo;t load them. It could treat id as some magical field of course like Rails used to and ignore the need for an index, but instead it not only encourages a good database design but requires it.</p>

<p>So let&rsquo;s go back and create our index in our database:</p>

<pre><code>$ psql example
$ alter table users add primary key (id);
</code></pre>

<p>Alright now let&rsquo;s run our script again with <code>node index.js</code> and see what we have:</p>

<pre><code>{ id: 1,
  email: 'john.doe@gmail.com',
  created_at: Thu Sep 24 2015 03:42:52 GMT-0700 (PDT),
  deleted_at: null }
</code></pre>

<p>Perfect! Now we&rsquo;re all connected and it even queried our database for us. Now let&rsquo;s take a few more look at some of the operators.</p>

<h3>Running an arbitrary query</h3>

<p><code>db.run</code> will let me run any arbritrary SQL. An example such as <code>db.run("select 'hello'")</code> will produce [ { &lsquo;?column?&rsquo;: &lsquo;hello&rsquo; } ].</p>

<p>This makes it nice and easier for us to break out of the standard ORM model and just run SQL.</p>

<h3>Find for quick look ups</h3>

<p>Similar to so many other database tools <code>find</code> will offer you the most common quick look ups:</p>

<pre><code>$ db.users.find({email: 'jane.doe@gmail.com'}, function(err, res){console.log(res)});
$ db.users.find({'created_at &gt;': '2015-09-24'}, function(err, res){console.log(res)});
</code></pre>

<p>And of course there&rsquo;s a where operator for multiple conditions.</p>

<h3>Structuring queries in your application</h3>

<p>While in the next post I&rsquo;ll dig in deep to JSON, this is perhaps my favorite feature of Massive&hellip; It&rsquo;s design for pulling out queries into individudal SQL files. Simply create a <code>db</code> folder and put your SQL in there. Let&rsquo;s take the most basic example of our user email lookup and put it in <code>user_lookup.sql</code></p>

<pre><code>SELECT *
FROM users
WHERE email = $1
</code></pre>

<p>Now back in our application we can run this and pass in a parameter to it:</p>

<pre><code>db.user_lookup(['jane.doe@gmail.com'], function(err,res){
  console.log(res);
});
</code></pre>

<p>This separation of our queries from our code makes it easier to track them, view diffs, and even more so <a href="http://www.craigkerstiens.com/2012/11/17/how-i-write-sql/">create very readable SQL</a>.</p>

<h3>Up next</h3>

<p>So sure, you can connect to a database, you can query some things. There were a couple of small but more novel things that we blew through in here. First is the fact I didn&rsquo;t have to define all my schema, it just knew it as <a href="http://www.craigkerstiens.com/2014/01/24/rethinking-limits-on-relational/">it really should</a>. The separation of SQL queries you&rsquo;ll custom write into files is simple, but will make for much more maintainable applications over the long term. And best of all is the JSON support, which I&rsquo;ll get to soon&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Seeding a sharing-economy or platform company]]></title>
    <link href="http://www.craigkerstiens.com/2015/10/02/seeding-a-sharing-economy-or-platform-company/"/>
    <updated>2015-10-02T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2015/10/02/seeding-a-sharing-economy-or-platform-company</id>
    <content type="html"><![CDATA[<p>These days if you&rsquo;re creating a company you likely hope to accomplish more with less people, two ways of doing this fall to: The sharing economy and creating a platform. It&rsquo;s easy to see the case for this when you have such <a href="http://graphics.wsj.com/billion-dollar-club/">unicorns</a> like AirBnB or Uber. The opportunity for each of those to compete against hotel chains or taxi services which each need to manage their own inventory is incredibly exciting and revolutionary. In a similar fashion platforms can offer much the same, Heroku&rsquo;s platform and marketplace made it easier than ever for developers to click a button and get everything they needed years ago. It&rsquo;s not just their code, it&rsquo;s everything from <a href="https://www.heroku.com/postgres">Postgres</a> to Mongo to <a href="https://elements.heroku.com/addons#logging">Logging</a>. Or take the app store as example. Smart phones weren&rsquo;t a new thing when the iPhone came out, but it was only the saviest of users that had apps installed on their windows smartphone or blackberry. The app store made the iPhone different than any other phone by allowing others to build and improve it, turning the iPhone not into a phone but a platform.</p>

<!--more-->


<p>Platforms and the sharing economy both let you get further than having to take on the costs of offering the equivilent all on your own. And while a great idea to venture into one of these two areas, starting them isn&rsquo;t as trivial as simply deciding to. For both of these you have issues with having a two sided market, first you have to convince the providers to come along, then the customers or vice versa. As a result of this two sided market issue the easiest way to actually start is by bootstrapping it yourself – or faking it til you make it.</p>

<p>What are some good examples of faking this? I&rsquo;m sure you can probably find some good stories going back about AirBnB or Uber, but let&rsquo;s assume times were different then. Let&rsquo;s take a look at a very recent example: <a href="http://techcrunch.com/2015/08/26/lugg-an-app-for-on-demand-short-distance-moves-raises-3-8-million/">Lugg</a> which just launched in the latest batch of YC. Lugg is Uber for moving essentially, allowing you to on-demand request furniture moved from one place to another. Early on Lugg built their app, then waited for requests to come in, then the founders got in a truck and moved the furniture themselves. As a customer the founders are likely providing a great experience, without ever having to tip their hat at the ways their hacking the impression of being a large well oiled machine.</p>

<p>But what about a platform? Slack continues to grow like wildfire as the new medium for communication. These days there&rsquo;s endless integrations for slack, and I expect they&rsquo;ll continue to expand what a platform for communication looks like. But a year ago they were quite a ways from having people show up at their door to add an integration. Sure there were people using them, but to expect github/trello/asana to immediately build an integration for every new flavor of the week tool would be crazy. Yet, without these integrations slack wouldn&rsquo;t be nearly as useful as it is today–and probably wouldn&rsquo;t have seen the growth it&rsquo;s seen. In the early days of a platform the easiest way to get these integrations and partners in place is to show up and build the work yourself. Slack carried the weight early of building these integrations, much as Heroku add-ons showed up at partners offices and help write the code to get them as a provider in the marketplace. And while both Slack and Heroku are larger companies now, it still holds true for smaller ones starting today. <a href="https://www.blockspring.com/">Blockspring</a>, a company which aims to make web services available through spreadsheets, had to do very much the same thing building their initial integrations themselves. Now with their rapidly growing user base and already large collection of APIs they may be able to shift the model, but early on that wasn&rsquo;t so much an option.</p>

<p>If you want to build a platform, start by creating the impression of one while still carrying the load yourself. Yes, move to a true platform as soon as you can, but don&rsquo;t wait for others to show up before you go that route.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A guide to analyst relations for startups]]></title>
    <link href="http://www.craigkerstiens.com/2015/07/25/A-guide-to-analyst-relations-for-startups/"/>
    <updated>2015-07-25T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2015/07/25/A-guide-to-analyst-relations-for-startups</id>
    <content type="html"><![CDATA[<p>When it comes to go to market and marketing there&rsquo;s lots of pieces in a toolchest that all work together. One that comes a bit later, but if used properly (much like a <a href="http://www.craigkerstiens.com/2015/07/21/An-intro-PR-guide-for-startups/">PR agency</a>) can be valuable is industry analysts. And while working with a PR agency can quickly start to become clear. How to work with analysts so it is productive on both sides can take a bit longer to figure out, or at least it did for me. Even before you do start working with them there&rsquo;s the question of if or when should you. Here&rsquo;s hoping this primer makes it a bit faster and easier for others.</p>

<!--more-->


<h3>What is an analyst</h3>

<p><em>Apologies to all analysts, but of all parts of this post I might butcher this one</em></p>

<p>Analysts talk to a lot of companies, both the ones making products as well as the ones purchasing them. I&rsquo;m not actually sure what the spread is I&rsquo;d guess 80-20. A large output of this and other activities is  creating various reports and rankings. Gartner&rsquo;s Magic Quadrant is probably the most well known industry ranking. Much of what they create isn&rsquo;t freely available for consumption so you likely don&rsquo;t see the sheer volume of insights they put out.</p>

<h3>Why would you engage with an analyst</h3>

<p>So what do they do for you? There’s really two major buckets:</p>

<p><strong>Help with sales/marketing</strong> &ndash; Given they&rsquo;re informing and influencing buying decisions of businesses they can be one more person on your side. If a launch in Techcrunch makes business foo aware of product bar, then an analyst report or ranking can help sway a decision on whether to try bar vs. baz.</p>

<p><strong>Consulting</strong> &ndash; The other major opportunity is for the analyst to give some form of guidance. In a larger company when you already have an established product they should absolutely be part of your launch process (more on that in a future post). They&rsquo;re actively following your market and space, hopefully just as you are to some extent. They can offer an outside perspective and help with broad areas of focus and messaging.</p>

<p><em>More</em> &ndash; In reality it’s as clean cut as above. They may be able to introduce you to good candidates for hiring. They may be able to introduce you to a large company interested in acquiring some capability which you have. They may be able to connect you with investors. All of these things can and do happen, but the above buckets typically are the primary drivers.</p>

<h3>When?</h3>

<p>First, engaging with analysts should always come after you have some confidence in the product, after you&rsquo;ve started some marketing drumbeat, and after sales. In short don&rsquo;t be in a huge rush here, you&rsquo;ll get there, but don&rsquo;t be in too big of a rush. As you start to get some attention and momentum it&rsquo;s just as likely they&rsquo;ll engage with you first as you reaching out. Also, marketing != sales, more on that in a future post.</p>

<p>But, let&rsquo;s assume you&rsquo;ve got a product <strong>which targets business</strong> (<em>Analysts aren&rsquo;t just for tech companies, though you’ll see the benefit here sooner if you’re say a database company than a HR product</em>). Let’s also assume you&rsquo;ve got some sales and have some <a href="http://www.craigkerstiens.com/2015/07/21/An-intro-PR-guide-for-startups/">good launches under your belt</a>. As it starts to come up in sales calls if you&rsquo;re in any industry reports or rankings that may be an indicator, if you&rsquo;re hearing about other competitors having more validation in such reports. As a general rule of thumb once you&rsquo;ve got inhouse PR they should be able to help guide and steer to the right time.</p>

<h3>So how do you engage with an analyst</h3>

<p>If you&rsquo;re engaging in some form of report or article, that should start to be pretty self explanatory. They&rsquo;ll send you a questionnaire, you fill it out. You go back and forth a little bit.</p>

<p>However, the majority of my interactions aren&rsquo;t on those articles and reports, for ever one time I fill out lots of questions to help some report or ranking I have 20 calls with an analyst.</p>

<p>There are two primary calls you can have, an inquiry and a briefing.</p>

<h4>Inquiries</h4>

<p>Inquiry is just a fancy word for consulting call. An inquiry you will always be paying for.</p>

<p><em>A small detour here. The regularity and consistency in which you engage with an analyst makes a difference. They&rsquo;re also people at the end of the day, so while firms have certain styles it&rsquo;s even further multiplied by being very people driven. In your interactions you&rsquo;ll have a different rapport with different people, it&rsquo;s at a minimum important to be aware of this.</em></p>

<p>So back to an inquiry. Within an inquiry your goal is to pull back the curtain and give some backstage insights into what you&rsquo;re doing and where you&rsquo;re headed. This is typically under NDA and trust the NDA of an analyst. It&rsquo;s worthwhile to be as candid as you can here, yes it feels weird, but you&rsquo;ll get the most value. They&rsquo;re not like that of a reporter looking for a scoop (not that you can&rsquo;t trust reporters, just know if you say it, it&rsquo;s on record). You don&rsquo;t have to relish the entire call to one area, but areas of coverage are often:</p>

<ul>
<li>Upcoming products and major releases you’re working on</li>
<li>Broader strategy and roadmap</li>
<li>Get input on what they&rsquo;re seeing and hearing from customers</li>
</ul>


<h4>Briefings</h4>

<p>The other type of call we have is a briefing. This is a little similar to that of a press briefing. You&rsquo;ll get on the call, and walk through some upcoming launch or just give an update on your company and progress. The latter is more common if they&rsquo;re unfamiliar with you or your product.</p>

<p>Analyst briefings are good to do earlier than your press briefings, compared to press they&rsquo;re like a bike with training wheels. It&rsquo;s best if you still maintain your balance–the ride will be smoother, but there&rsquo;s a little less risk of completely toppling over. One key difference is you often have a powerpoint deck you get to walk through during an analyst briefing. I&rsquo;ve found this is helpful for pacing and key messages, I used to be skeptical, but now very much feel it&rsquo;s always worth doing.</p>

<p><em>Pro-tip: You can create a deck and use it for press too, no they won&rsquo;t want to get on a gotomeeting, but you can send it over so they have more content later. BUT, more importantly you can also walk through it on your own screen if it helps with pacing.</em></p>

<p>Within a briefing you&rsquo;ll have some ability to ask them questions at points. Does this resonate? Are you hearing similar? What are you seeing in the market? Don&rsquo;t turn it into an inquiry, but knowing the parts that hit home for them allow you to refine your pitch for the next call.</p>

<h4>Engaging &ndash; the tactical parts</h4>

<p>&ldquo;Analysts are pretty much paid to talk and write&rdquo; &ndash; <a href="http://www.twitter.com/cote">@cote</a>. So expect that often when you occupy their time there&rsquo;s a price to it. In terms of finding them it should be pretty easy, to know the list of ones in your space, you may see them quoted or reference in various media outlets. You may just naturally crop up in a report.</p>

<p>If you create a regular relationship with them you&rsquo;ll have some contract of hours over the course of a quarter or year. At an early stage company this is often owned and manage by whomever runs your PR from an internal perspective.</p>

<h3>Conclusion</h3>

<p>If you&rsquo;re about to engage with analysts for the first time or haven’t figured out how to get the most out of your interactions I hope the broad overview is helpful. If there&rsquo;s some glaring parts you feel I&rsquo;ve missed let me know <a href="http://www.twitter.com/craigkerstiens">@craigkerstiens</a>. And for further reading/watching I’d encourage checking out the great talk from <a href="http://www.twitter.com/cote">@cote</a> in the <a href="http://www.heavybit.com/library/video/2014-01-21-michael-cote">Heavybit library</a>.</p>

<p>As far as take-aways and a recap:</p>

<ol>
<li>Don&rsquo;t be too eager to jump in with analysts. They can absolutely provide value, but you have to put some time in before it really starts to pay off. It&rsquo;s not an overnight change and takes building a rapport with them.</li>
<li>At the same time, analysts can be useful in many B2B areas not just tech ones.</li>
<li>When in an inquiry be open and as transparent as possible.</li>
<li>Powerpoint/Keynote/Google presentations are useful in briefings, even if it&rsquo;s just for you to follow along.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A guide to PR for startups]]></title>
    <link href="http://www.craigkerstiens.com/2015/07/21/An-intro-PR-guide-for-startups/"/>
    <updated>2015-07-21T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2015/07/21/An-intro-PR-guide-for-startups</id>
    <content type="html"><![CDATA[<p>You&rsquo;ve built your product and you&rsquo;re now ready for your first major launch. Or you&rsquo;ve been through a launch or two, but are looking to scale the process as you&rsquo;re doing more launches and announcements. You really have two options: do it <a href="http://jasonlbaptiste.com/featured-articles/how-i-pitched-techcrunch-and-13-ways-to-get-press-when-you-launch-your-startup/">all on your own</a>, or work with a PR agency. One frequent crossroad is that you&rsquo;re not at the point of a full time PR person, but unsure what a PR agency can offer you; and, further what&rsquo;s the best way to work with them so you&rsquo;re getting the maximum value.</p>

<p>As I&rsquo;ve talked to more startups lately, it&rsquo;s become clear that effectively working with PR teams and the media is mostly learned by doing. Because there&rsquo;s not much guidance out there, here&rsquo;s an attempt at some basic guidelines.</p>

<!--more-->


<h3>On PR</h3>

<p>First there&rsquo;s two types here and they&rsquo;re not mutually exclusive. In-house PR is a full time person or team that works within your company, here you&rsquo;ll often have a pretty different experience. From my experience, in-house PR people tend to understand a company message and vision because they are living and breathing your company values every day.</p>

<p>The other alternative is hiring a PR agency. An agency will have several (sometimes hundreds!) of clients. The relationship that you’ll have with an agency is much different than in-house. You&rsquo;ll use them just like you would a consultant or contractor. Most startups end up with the agency approach first, because of the perception of “more people working for a cheaper cost than hiring in-house.” However, it&rsquo;s of note an agency doesn&rsquo;t alleviate you of doing work, nor should you want them to handle all parts of it.</p>

<h4>Messaging</h4>

<p>An agency may offer to help with messaging, but take this somewhat lightly. I don&rsquo;t doubt that some are very good at it, but in most cases I&rsquo;ve found they don&rsquo;t have the same amount of customer interaction as you as a founder or early employee would. Further, your vision of impact to the market and direction may be more distant than theirs. You should expect to own your messaging, just like you own your product.</p>

<p>Where they can heavily help is providing a lot of structured frameworks for helping you get to your messaging. Some pretty basic templates of standard questions for customers and partners can go along way in helping you actually uncover what they feel your value is.</p>

<p><em>On your key messaging/value prop, there&rsquo;s two pieces I&rsquo;ll drop in here. While I&rsquo;d love to write another long post on it, I wonder when I&rsquo;ll actually get it out. So the first is pitch the problem you&rsquo;re trying to solve–<a href="http://500hats.typepad.com/500blogs/2009/08/your-solution-is-not-my-problem.html">Dave McClure</a> talks about this as well as anyone. The second is don&rsquo;t pitch features, pitch the use cases and solutions. Pitch what&rsquo;s possible</em></p>

<h4>Pitching</h4>

<p>This is the number one area I&rsquo;ve found that having PR makes a huge difference. In the world of reporting, different reporters have different beats (areas of coverage), styles, outreach preferences, and most importantly, different relationships with companies and people. Knowing <em>all</em> of this and how to pitch a story to them is key. Yes you can spend hours researching and creating a perfect story just for them, and do that again, and again and hopefully land some coverage. But I&rsquo;d argue a bit: that&rsquo;s not the best use of your time.</p>

<p>With a good PR person or agency you&rsquo;ll be able to strike a mix of:</p>

<ul>
<li>Here&rsquo;s the outlets I want to be in and why (have a good reason for why).</li>
<li>Understanding the audience and readership.</li>
<li>What outlets you feel like your key customers are reading, and validate this with the agency.</li>
</ul>


<p>From there, if you&rsquo;ve found a good agency they already have relationships with your key journalists / publications. So if you have a compelling product, you just need to give them the right messaging of the particular launch or news.</p>

<h4>What else to expect from your agency</h4>

<p>A surprise for some is how the whole process works. The agency is going to be there on the phone with you. You&rsquo;re not going to hang out over beers while pitching being chummy. The reporter is listening to multiple other pitches, it&rsquo;s likely they had one right before you and right after. The agency is there listening, helping keep time and track of conversation for reporter fact-checking after the interview.</p>

<p>Hopefully they&rsquo;re also keeping notes. They should be able to provide you with some high level notes of what message resonated with each reporter and what didn&rsquo;t, what you covered, and what they asked. This is especially useful for future interactions.</p>

<p>Similarly you should get a briefing 1 pager ahead of time. You should be able to skim this, you don&rsquo;t have to memorize. But it&rsquo;ll include key things about recent articles written by the reporter, their beat, topics to dive into and ones to stay away from. If you can connect the dots, those notes from an initial call start to feed into the 1 pagers for future calls.</p>

<h3>Onto the briefing</h3>

<p>Of course it&rsquo;s important to land the briefing in the first place, but just as important is getting it right. Coming into it, the reporter will have already gotten the high level pitch&hellip; It&rsquo;s why they took the call. You&rsquo;ll get a mixed bag of those that are open to teeing up the opportunity to those that want to get right to the news. Roll with what they prefer, but also don&rsquo;t be afraid of trying to hit some of your key points.</p>

<h4>Have your key messages ready</h4>

<p>Sound bites help hugely here. Analogies, customer references, whatever you want to hit. Have it ready. Also if you&rsquo;ve got a great sound bite that helps tell the story, it can make the reporter&rsquo;s job easier. Just don&rsquo;t swing too far into happy go lucky marketing land. It’s important to remember that you’re talking to a person. Have a conversation &ndash; don’t talk at them.</p>

<h4>Go slow</h4>

<p>It may seem obvious when you think about it, but as you&rsquo;re talking the reporter is writing. Or at least you hope they are. Some do it by hand and type up notes late, some type right then and there. When you hear a pause it doesn&rsquo;t always mean to keep going and it seldom means hurry up. Become extra comfortable with pauses. Check in if you&rsquo;re going to fast, if they&rsquo;re following, if they have any questions. I&rsquo;ve had people bring me in a beer before because I&rsquo;d had multiple cups of coffee through a few pitches, and they were trying to slow me down a bit. Know your pace, and then slow it down.</p>

<h4>Questions</h4>

<p>It&rsquo;s okay if they don&rsquo;t have a lot of questions, they may not. They may have none at all. Yes, pause, and give them a chance, or even ask if they have any. But don&rsquo;t stress too much if they have no questions.</p>

<p>On the flip side of that &ndash; you’re PR person should have prepared a list of questions for you beforehand that the reporter could possibly throw your way. Be sure you’ve thought through and practiced all the Q&amp;A scenarios before the interview so you aren’t caught off-guard when you’re in front of the reporter.</p>

<h3>In conclusion</h3>

<p>If it&rsquo;s your first go around, don&rsquo;t stress too much. Have the headlines you want in your mind and key messages, or better yet write them out. <em>Personally I write key things on a whiteboard nice and large before I&rsquo;m on the call</em>. Finally once you&rsquo;re all done, enjoy reading the coverage. <strong>But you&rsquo;re not all done</strong> after you get some coverage look back, run a retrospective just like you would for a software project. What worked well, why did or didn&rsquo;t something work. What can you improve next time.</p>

<p>*Full disclosure, this is based across interactions with a small sample size of different PR agencies and individuals. Mileage may differ heavily from PR firm to PR firm, but hopefully the above provides at least some roadmap for more clarity vs. flying blind. As always if you&rsquo;ve got feedback/questions, feel free to let me know <a href="http://www.twitter.com/craigkerstiens">@craigkerstiens</a></p>

<p><em>Finally a special thanks to <a href="http://www.twitter.com/pavtalk">Paul Katsen</a> for much of the inspiration on creating this post and to he and <a href="http://www.twitter.com">Katie Boysen</a> for review</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving past averages in SQL (Postgres) – Percentiles]]></title>
    <link href="http://www.craigkerstiens.com/2015/06/07/Moving-past-averages-in-sql/"/>
    <updated>2015-06-07T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2015/06/07/Moving-past-averages-in-sql</id>
    <content type="html"><![CDATA[<p>Often when you&rsquo;re tracking a metric for the first time you take a look at your average. For example what is your ARPU &ndash; Average Revenue Per User. In theory this tells you if you can acquire new user how much you&rsquo;ll make off that user. Or maybe what&rsquo;s your average life time value of a customer. Yet, many that are more familiar looking and extracting meaning from data median or a few different looks at <a href="http://apmblog.dynatrace.com/2012/11/14/why-averages-suck-and-percentiles-are-great/">percentiles can be much more meaningful</a>.</p>

<!--more-->


<p>And while you can very easily get the <code>AVG</code> in Postgres, with a small amount more effort you can report on percentiles as well. Window functions have been around for some time in Postgres. They allow you to order your result set over a certain group. The most basic example is if you want to order by date, but know which one falls at place 10 in order you can use a window function and project out the <code>rank()</code>.</p>

<p>Beyond outputting the rank yourself and doing extra manipulation Postgres has some great utilities to make the most common uses even easier. Being able to compute things such as the perc 95 directly on the data, or lay out for every record in the result where it falls within a percentile is hugely useful. Let&rsquo;s take a look:</p>

<p>Assuming you have a table called purchases, which has a total in it we could try:</p>

<pre><code>SELECT id,
       total,
       ntile(100) OVER (ORDER BY total) AS perc_rank
FROM purchases
</code></pre>

<p>This would give us something like:</p>

<pre><code>    id    |  total  | perc_rank
----------|---------|-----------
   264    |  12034  |    100
   643    |  11830  |    100
...
...
   304    |   751   |     95
</code></pre>

<p>What this would tell us is we have less than 5% of our purchases that have a total over 751. From here you can start to dig in and extract all sorts of different meanings, and by doing directly in SQL you&rsquo;re closer to the data and have one less processing step.</p>

<p>Percentiles get even more fun with the ordered set functions that came out in <a href="http://www.craigkerstiens.com/2014/02/02/Examining-PostgreSQL-9.4/">Postgres 9.4</a>. They even allow you to project out hypothetical values in certain cases. For now I&rsquo;d encourage adding ntile to your toolbox anytime you&rsquo;re analyzing average or medians it will make your world a bit better, and then consider exploring further on the <a href="http://www.postgresql.org/docs/9.4/static/functions-aggregate.html#FUNCTIONS-ORDEREDSET-TABLE">ordered set functions</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upsert lands in PostgreSQL 9.5 – A first look]]></title>
    <link href="http://www.craigkerstiens.com/2015/05/08/upsert-lands-in-postgres-9.5/"/>
    <updated>2015-05-08T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2015/05/08/upsert-lands-in-postgres-9.5</id>
    <content type="html"><![CDATA[<p>If you’ve followed anything I’ve <a href="http://www.craigkerstiens.com/2012/04/30/why-postgres/">written about Postgres</a>, you know that I’m a fan. At the same time you know that there’s been one feature that so many other databases have, which Postgres lacks and it <a href="http://www.craigkerstiens.com/2014/08/15/my-postgres-wishlist-for-9.5/">causes a huge amount of angst for not being in Postgres</a>… Upsert. Well the day has come, it’s finally committed and will be available <a href="http://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=168d5805e4c08bed7b95d351bf097cff7c07dd65">in Postgres 9.5</a>.</p>

<p>Sure we’re still several months away from Postgres 9.5 being released, anywhere from 3-6 months as a best guess. That doesn’t mean we can’t take a first look at this feature. Though before we get into it a few special call outs of thanks to Peter Geoghegan of the <a href="http://www.heroku.com/postgres">Heroku Postgres</a> team for being the primary author on it, Andres Freund who recently just joined <a href="https://www.citusdata.com">Citus Data</a> for his heavy contributions, and Heikki Linnakangas as well for his contributions.</p>

<!-- more -->


<p>And now onto the exploration. Upsert is the common name, but if you’re unfamiliar upsert is essentially create or update – Create this new record, but if a conflict exists update it. Let’s take a practical example.</p>

<p>Assume you have a web scraper that imports product information into a table. Each product has a UPC code, title, description, and link. There’s a unique constraint on the UPC code. Now, if your web scraper tries to insert a new product, and a product with the same UPC already exists, you’d usually get an error. But you don’t want the query to fail, you’d want to update the existing product instead. Maybe with a new image, maybe a new description, whatever have you, but I don’t want it to blow up… I simply want to capture the new data and save it.</p>

<p><strong>So before</strong>: Insert a record… Exception this violates a unique constraint… Let your app figure out what to do. <em>protip: often applications would try to work around this, but you can run a chance of a race condition and duplicate records if there’s a conflict. TLDR; it’s not a perfect solution.</em></p>

<p><strong>Now</strong>: Insert a record… There’s a unique constraint violation… Okay, let’s just update all the new record’s fields <strong>inside a single transaction</strong></p>

<p>So enough explanation, here’s how it actually looks in the syntax:</p>

<pre><code>INSERT INTO products (
    upc, 
    title, 
    description, 
    link) 
VALUES (
    123456789, 
    ‘Figment #1 of 5’, 
    ‘THE NEXT DISNEY ADVENTURE IS HERE - STARRING ONE OF DISNEY'S MOST POPULAR CHARACTERS! ’, 
    ‘http://www.amazon.com/dp/B00KGJVRNE?tag=mypred-20’
    )
ON CONFLICT DO UPDATE SET description=excluded.description;
</code></pre>

<p>It’s been a long time coming for this, and it makes building applications that need this kind of behavior even easier. While it would have been great for this to be available years ago, kudos to Postgres and its community for taking the approach that is safe for your data. The result we have now both provides the desired behavior of create or update, <strong>and</strong> is performant without the risk of race conditions for your data.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A product management blueprint]]></title>
    <link href="http://www.craigkerstiens.com/2015/02/18/a-pm-blueprint/"/>
    <updated>2015-02-18T00:00:00-08:00</updated>
    <id>http://www.craigkerstiens.com/2015/02/18/a-pm-blueprint</id>
    <content type="html"><![CDATA[<p>I find myself having more conversations with startups – both small and large – about product management. I&rsquo;ve blogged about some of <a href="http://www.craigkerstiens.com/2013/03/13/planning-and-prioritizing/">the tools</a> in my chest here but I haven&rsquo;t talked much about my “blueprint” for product management, which I find myself laying out in many conversations over coffee. What follows is this process I’ve used a few times over with new teams to get product and engineering moving together, shipping in a predictable manner, and tackling bigger and more strategic projects.</p>

<!--more-->


<h3>Trust</h3>

<p>I need to know how to work with my team, what their working styles are, and how we interact. This starts by simply interacting – specifically, outside of the office. I heard a similar opinion recently from Chris Fry (who ran engineering at Salesforce and Twitter) when he remarked something to the effect of: “you can tell a good PM from a bad one based on if he goes to drinks with his team.” Without getting hung up on whether it’s beers or coffee, it’s more about socialization with your team and time outside the office. My personal approach: expect a dinner invite over to my place when I take on running product for a new team.</p>

<h3>Velocity</h3>

<p>Once you&rsquo;ve started to build some rapport, it&rsquo;s time to get down to business. If being able to quickly commit and ship something isn’t a problem for you, then it’s easy to just assume this is working. In reality most teams I encounter that need PM support don’t have shipping nailed down. You probably already know if you fall into that category of feeling like you can commit and ship vs. not, so if you’re not able to do that a few tips:</p>

<ul>
<li>There’s some projects that everyone wants to ship that’s been tried over and over, <strong>don’t tackle that first</strong>.</li>
<li>Shipping something is better than nothing. It doesn&rsquo;t have to be the right thing.</li>
<li>Sometimes you don&rsquo;t have to ship something to get velocity, you can launch things you already have</li>
<li><del>Kill scope</del> Test things earlier and more iteratively, the more you can validate or try something without requiring a large investment the more everyone feels better about the direction you’re heading.</li>
</ul>


<p>The key here is to commit to projects, deliver, and move on. Your velocity depends solely on delivery, not tasks, not sprints, not projects, etc.  If you haven’t shipped anything in a year, then your velocity for the year is zero. At a later point you should move from the focus on shipping anything to shipping the right things, it’s more important to ship 1 thing that moves the needle than 10 that don’t, but that’s a later concern.</p>

<h3>Killing things</h3>

<p>On the note of killing scope&hellip; I&rsquo;ve heard it articulated at times, that some engineers are happy when certain PMs show up because it means less work for them. When you go over to an engineer’s desk are you creating more or less work? The answer should be less some large percentage of the time. If you can find a way to accomplish your goals with less effort, it&rsquo;s always a win. Every project everywhere always needs more time or money, what’s more innovative is how you can help a project to ship without one of those two.</p>

<p>At a broader perspective than just scope – one of the biggest ways product can help engineering is by pushing harder for killing off features and the scope of a product. There&rsquo;s a good test on if something is ready to ship: if you <a href="http://www.craigkerstiens.com/2014/08/13/when-to-ship-when-to-kill/">tell beta users you&rsquo;re killing it</a> and they yell at you that you shouldn’t kill it, then it’s ready to ship.</p>

<p>If you’ve already shipped things, but they’re not delivering value or not being used, kill them. It’s that simple, it may have been a great idea at the time, but either invest in making sure it’s used or kill it so you don’t have to maintain it.</p>

<h3>Roadmap planning</h3>

<p>Usually getting velocity and killing things takes 3-6 months to really take full effect. At this point a team feels like they&rsquo;re not under a pile of technical debt, and they can commit to shipping projects. This is the point when product and engineering are melding and you can really start to have fun about where you&rsquo;re headed. At this point I&rsquo;ve seen a huge mix of where engineers are more actively or less actively engaged in this process. And the reality is this is everyone’s job to be thinking about where you&rsquo;re headed as a company – at least that&rsquo;s the case for any company that classifies itself as a startup.</p>

<p>My favorite tool for this is a team gridding exercise, you can read more about this <a href="http://www.craigkerstiens.com/2013/03/13/planning-and-prioritizing/">here</a> and <a href="http://www.craigkerstiens.com/2013/08/13/rule-of-thirds/">here</a>. This is often best conducted at an off-site where you have an opportunity for casual conversation which can foster broader thinking beyond the obvious bug fixes or smaller product improvements.</p>

<p><em>One item of note I&rsquo;ve heard from teams that have done this or similar exercises is they still have trouble deciding what to do after the fact. The role of product is to get to that decision. The most important part is getting to a decision and not the perfect one, gather data, decide, revisit as you go along. All of this isn’t to say that it’s an arbitrary decision, customers, data all inform that as well as the effort to impact matrix exercise, but in the end a clear direction isn’t executed on consensus.</em></p>

<h3>In conclusion</h3>

<p>There’s really no end or done when it comes to the role and the work.</p>

<p>There’s always another milestone and the market is always moving around you. But once you’re able to execute predictably and think in an ordered sense about your roadmap, you’re in a position to be able to monitor and adapt to the market, and even more so experiment and shape the market yourself. At that point you have to keep doing it and then the hard part becomes finding ways of keeping a fresh perspective <em>protip: customers are an important part of that equation</em></p>

<p>Have tips/tricks/practices that I completely missed here or that you disagree with? I’m always happy to talk with others so drop me a note <a href="mailto:craig.kerstiens@gmail.com">craig.kerstiens@gmail.com</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A simple guide for DB migrations]]></title>
    <link href="http://www.craigkerstiens.com/2014/10/01/a-simple-guide-for-db-migrations/"/>
    <updated>2014-10-01T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/10/01/a-simple-guide-for-db-migrations</id>
    <content type="html"><![CDATA[<p>Most web applications will add/remove columns over time. This is extremely common early on and even mature applications will continue modifying their schemas with new columns. An all too common pitfall when adding new columns is setting a not null constraint in Postgres.</p>

<!--more-->


<h3>Not null constraints</h3>

<p>What happens when you have a not null constraint on a table is it will re-write the entire table. Under the cover Postgres is really just an append only log. So when you update or delete data it&rsquo;s really just writing new data. This means when you add a column with a new value it has to write a new record. If you do this requiring columns to not be null then you&rsquo;re re-writing your entire table.</p>

<p>Where this becomes problematic for larger applications is it will hold a lock preventing you from writing new data during this time.</p>

<h3>A better way</h3>

<p>Of course you may want to not allow nulls and you may want to set a default value, the problem simply comes when you try to do this all at once. The safest approach at least in terms of uptime for your table &ndash;> data &ndash;> application is to break apart these steps.</p>

<ol>
<li>Start by simply adding the column with allowing nulls but setting a default value</li>
<li>Run a background job that will go and retroactively update the new column to your default value</li>
<li>Add your not null constraint.</li>
</ol>


<p>Yes it&rsquo;s a few extra steps, but I can say from having walked through this with a number of developers and their apps it makes for a much smoother process for making changes to your apps.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My wishlist for Postgres 9.5]]></title>
    <link href="http://www.craigkerstiens.com/2014/08/15/my-postgres-wishlist-for-9.5/"/>
    <updated>2014-08-15T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/08/15/my-postgres-wishlist-for-9.5</id>
    <content type="html"><![CDATA[<p>As I followed along with the <a href="http://www.craigkerstiens.com/2014/03/24/Postgres-9.4-Looking-up/">9.4 release</a> of Postgres I had a few posts of things that I was excited about, some things that missed, and a bit of a wrap-up. I thought this year (year in the sense of PG releases) I&rsquo;d jump the gun and lay out areas I&rsquo;d love to see addressed in PostgreSQL 9.5. And here it goes:</p>

<!--more-->


<h3>Upsert</h3>

<p>Merge/Upsert/Insert or Update whatever you want to call it this is still a huge wart that it doesn&rsquo;t exist. There&rsquo;s been a few implementations show up on mailing lists, and to the best of my understanding there&rsquo;s been debate on if it&rsquo;s performant enough or that some people would prefer another implementation or I don&rsquo;t know what other excuse. The short is this really needs to happen, until that time you can always <a href="http://stackoverflow.com/questions/1109061/insert-on-duplicate-update-in-postgresql/8702291#8702291">implement it with a CTE</a> which can have a race condition.</p>

<h3>Foreign Data Wrappers</h3>

<p>There&rsquo;s so much opportunity here, and this has easily been my <a href="http://www.craigkerstiens.com/2013/08/05/a-look-at-FDWs/">favorite feature of the past 2-3 years in Postgres</a>. Really any improvement is good here, but a hit list of a few valuable things:</p>

<ul>
<li>Pushdown of conditions</li>
<li>Ability to accept a DSN to a utility function to create foreign user and tables.</li>
<li>Better security around creds of foreign tables</li>
<li>More out of the box FDWs</li>
</ul>


<h3>Stats/Analytics</h3>

<p>Today there&rsquo;s <a href="http://madlib.net/">madlib</a> for machine learning, and 9.4 got support for <a href="http://www.depesz.com/2014/01/11/waiting-for-9-4-support-ordered-set-within-group-aggregates/">ordered set aggregates</a>, but even still Postgres needs to keep moving forward here. PL-R and PL-Python can help a good bit as well, but having more out of the <a href="http://www.postgresql.org/docs/9.3/static/functions-aggregate.html">box functions</a> for stats can continue to keep it at the front of the pack for a database that&rsquo;s not only safe for your data, but powerful to do analysis with.</p>

<h3>Multi-master</h3>

<p>This is definitely more of a dream than not. Full multi-master replication would be amazing, and it&rsquo;s getting closer to possible. The sad truth is even once it lands it will probably require a year of maturing, so even more reason for it to hopefully hit in 9.5</p>

<h3>Logical Replication</h3>

<p>The foundation made it in for 9.4 which is huge. This means we&rsquo;ll probably see a good working out of the box logical replication in 9.5. For those less familiar this means the replication is SQL based vs. the binary WAL stream. This means things like using replication to upgrade across versions is possible. So not quite 0 downtime, but ~ a minute or two to upgrade versions. Even of large DBs.</p>

<h3>An official GUI</h3>

<p>Alright this one is probably a pipe dream. And to kick it off, no pgAdmin doesn&rsquo;t cut it. A good end user tool for connecting/querying would be huge. Fortunately the ecosystem is improving here with <a href="http://www.jackdb.com">JackDB</a> (web based) and <a href="https://eggerapps.at/pgcommander/">PG Commander</a> (mac app), but these still aren&rsquo;t discoverable enough for most users.</p>

<h3>What do you want?</h3>

<p>So there&rsquo;s my wishlist, what&rsquo;s yours for 9.5? Let me know &ndash; <a href="http://www.twitter.com/craigkerstiens">@craigkerstiens</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[When to ship it, when to kill it]]></title>
    <link href="http://www.craigkerstiens.com/2014/08/13/when-to-ship-when-to-kill/"/>
    <updated>2014-08-13T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/08/13/when-to-ship-when-to-kill</id>
    <content type="html"><![CDATA[<p>A few weeks ago at lunch I had the opportunity to catch up with a company in the current YC batch, building something very similar to dataclips. While we talked about a lot of things from what we&rsquo;ve learned from dataclips, marketing, and other areas. One area we talked about was product and when to ship vs. when to kill things and I realized I hadn&rsquo;t talked on my fairly simple but clear view on this publicly, so here it is.</p>

<p><em>A large credit to <a href="http://www.twitter.com/hirodusk">Adam Wiggins</a> for giving this model early on in Heroku and his approach to shipping product.</em></p>

<!--more-->


<h3>A precursor to shipping</h3>

<p>First a little background on shipping, in shipping something I&rsquo;m going to assume you have some process of alpha/beta testing with users. This is actually fairly key, if you&rsquo;re not testing it with users then well the rest of this is all moot. Alpha and beta testing is pretty simple, you need some early users. These can be friends, people within a network, or random users you select from. There&rsquo;s different value to how you select these but that&rsquo;s a topic for another time and place.</p>

<h3>On to shipping</h3>

<p>So how do you know it&rsquo;s ready. The basic idea is super simple. Give it to some users in alpha/beta testing. Or start to roll it out following a one &ndash;> some &ndash;> many all principle (maybe to 5% or 10% of your userbase). Then take that brand new feature away.</p>

<p>There&rsquo;s a couple of ways to do this as far as mechanics. If you&rsquo;re in contact with users such as alpha/beta users that you were higher touch with just email them. Tell them you&rsquo;re removing the feature, or if you want to approach it more softly ask them how much they&rsquo;d miss it if it were gone tomorrow. If you&rsquo;re rolling it out more broadly perhaps behind a feature flag, flip it off and watch for feedback.</p>

<p><em>Once you take the feature away or threaten to if you don&rsquo;t have users with pitchforks almost immediately then it&rsquo;s not ready to ship</em>.</p>

<p>Go back to the drawing board and work more on it or simply kill it. As <a href="http://www.twitter.com/james_heroku">@james_heroku</a> would say: &ldquo;So you&rsquo;re saying the reason to ship the shitty thing now is becase you&rsquo;ve spent a lot of time on it?&rdquo;. Stepping back it&rsquo;s all logical, but all too often it&rsquo;s not put in practice when shipping it.</p>

<h3>Your metrics can lie</h3>

<p>Relying on just seeing a user spend some time on the new feature can often be misleading vs. the above approach. There&rsquo;s a great talk by Des Traynor over at <a href="http://insideintercom.io/talk-product-strategy-saying/">intercom.io</a> that hits on this in part, the basic premise in there is that users shifting time from feature X to Y doesn&rsquo;t mean it was a success it just means they&rsquo;re spending time on something different. In launching new things you want to increase the overall value of your product, not simply shift users focus to the new flavor of the week.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scaling Organizations - Scribing]]></title>
    <link href="http://www.craigkerstiens.com/2014/07/14/on-scribing/"/>
    <updated>2014-07-14T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/07/14/on-scribing</id>
    <content type="html"><![CDATA[<p>In the process of growing a company there&rsquo;s several hurdles based on the size of the company. What worked at 5 doesn&rsquo;t work at 20, what works at 20 doesn&rsquo;t work at 50, and what worked at 50 doesn&rsquo;t work at 150. There&rsquo;s a lot of talk about <a href="http://lifehacker.com/5965280/follow-jeff-bezos-two-pizza-rule-to-avoid-the-dangers-of-groupthink">two pizza teams</a> and <a href="http://adam.herokuapp.com/past/2011/4/28/scaling_a_development_team/">scaling development teams</a> out there. One thing I haven&rsquo;t seen quite enough of is details around scribing and documenting things.</p>

<!--more-->


<h3>Planning</h3>

<p>At teams of 2 and 3 you get everyone in a room. Perhaps 1 person says what you&rsquo;re going to do and you all rally around it, or maybe it&rsquo;s a day of debate and persuasion from all sides.</p>

<p>In the end though you all leave, get heads down, but all know what goal you&rsquo;re working towards. At a larger company planning doesn&rsquo;t scale quite this way. I&rsquo;ve seen roadmapping and planning done a variety of ways as companies scale, but most times the thing they miss for far too long is documenting what comes out of it. Many may produce some level of artifact, but a cohesive wrap-up is often missed. Such an artifact should be easily digestible within a couple minutes, but also deep enough to answer many of the initial questions raised by the high level pieces.</p>

<h3>Meetings</h3>

<p>Meetings are a smaller level item than broader planning, and tend to go without thorough note taking than higher level planning. With growth you&rsquo;ll have more meetings, trust me you will. The more meetings you have the more likely you may miss one or two you&rsquo;re interested in. Or perhaps its as simple as some team members being out. Summer is especially hard around this. For a team of 10 it&rsquo;s not uncommon that you may go all summer with at least 1 person not in the meeting and often two.</p>

<p>Keeping those that miss the meeting well informed of what happened at it is critical as you scale. This is slightly less important at an extremely large company, though still valuable, but critical <em>as you scale to larger</em>. As you&rsquo;re scaling things are changing faster, and context can more easily get lost.</p>

<p>So how do you improve this?</p>

<p>Some practical tips:</p>

<ul>
<li>Have a set of running notes with someone consistently scribing is a great standard to set. <em>If you missed a meeting you know where to go for it.</em></li>
<li>Recording who was and was not at the meeting can be incredibly valuable. I&rsquo;ve heard statements &ldquo;I said X at Y meeting&rdquo;, the only problem with that statement is I wasn&rsquo;t at Y meeting.</li>
<li>Not only recording the meeting notes, but explicitly calling out who&rsquo;s not there can help to know if that information should be explicitly passed along vs. just missed.</li>
<li>Within your long running document have a summary to wrap it up. While scribing is great it can lead to not seeing the forest for the trees at times.</li>
</ul>


<p>And a few from others:</p>

<ul>
<li>Meetings need a <strong>purpose</strong> and an <strong>agenda</strong>. If I don&rsquo;t know why I&rsquo;m having a meeting, or what will be covered, I won&rsquo;t go. If I&rsquo;m organizing a meeting and can&rsquo;t spare the time to produce an agenda and goal, I shouldn&rsquo;t waste other people&rsquo;s time with the meeting – <a href="http://www.twitter.com/jacobian">@jacobian</a></li>
<li>Any meeting over about 15-20 isn&rsquo;t a meeting, it&rsquo;s a presentation (which is OK too but make it clear that it&rsquo;s a download, not a discussion). – <a href="http://www.twitter.com/jacobian">@jacobian</a></li>
</ul>


<h3>Email</h3>

<p>If you aren&rsquo;t aware I&rsquo;m a <a href="http://www.craigkerstiens.com/2014/02/07/my-email-hacks/">big fan of email</a>. Email is almost guaranteed that someone will at least open it (at least if its to them or a clear enough list). If you have something you want someone to read – email it. You can have a canonical wiki, or Trello board, or a variety of tools, but email will get more eyeballs than any of these. At the same time don&rsquo;t email things that are already documented elsewhere.</p>

<p>Emails are great for highlighting the things people absolutely need to know about. Short and concise emails will also help to improve reach. Be careful to make these emails have a high ratio of information size to value. If you have a lot of extra follow on content send them somewhere else to read.</p>

<p>Finally don’t overuse email. If you’re sending the same thing every week people will become numb to this. <a href="http://www.yesware.com">Monitoring if your emails are being opened/responded</a> to can help to know if you&rsquo;re over-broadcasting.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Postgres and Connection Pooling]]></title>
    <link href="http://www.craigkerstiens.com/2014/05/22/on-connection-pooling/"/>
    <updated>2014-05-22T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/05/22/on-connection-pooling</id>
    <content type="html"><![CDATA[<p>Connection pooling is quickly becoming one of the more frequent questions I hear. So here&rsquo;s a primer on it. If there&rsquo;s enough demand I&rsquo;ll follow up a bit further with some detail on specific Postgres connection poolers and setting them up.</p>

<h3>The basics</h3>

<p>For those unfamiliar, a connection pool is a group of database connections sitting around that are waiting to be handed out and used. This means when a request comes in a connection is already there whether in your framework or some other pooling process, and then given to your application for that specific request or transaction.  In contrast, without any connection pooling your application will have to reach out to your database to establish a connection. While in the most basic sense you may thinking connecting to a database is quick, often theres <a href="http://www.craigkerstiens.com/2013/03/07/Fixing-django-db-connections/">some overhead here</a>. An example is SSL negotiation that may have to occur which means you&rsquo;re looking at not 1-2 ms but often closer to 30-50.</p>

<!--more-->


<h3>The options</h3>

<p>There&rsquo;s really two major options when it comes to connection pooling:</p>

<ul>
<li>Framework pooling</li>
<li>Standalone pooler</li>
<li><em>Persistent connections</em></li>
</ul>


<h4>Framework pooling</h4>

<p>Today many modern application frameworks have at least some basic level of connection pooling. This means as your application server starts up it will create a pool of connections to use. It&rsquo;s worth noting that while most modern frameworks have pooling, not all do, and further it may not be enabled by default.</p>

<p>If you&rsquo;re using the Sequel ORM for Ruby or SQLAlchemy for Python you&rsquo;re well covered here. Further <a href="https://devcenter.heroku.com/articles/concurrency-and-database-connections">Rails</a> is in pretty good shape also, though you may want to configure the pool size. For Django it&rsquo;s a bit of a mixed story. For some time <a href="http://www.craigkerstiens.com/2013/03/07/Fixing-django-db-connections/">Django</a> did not have pooling at all. As of Django 1.6 you now have persistent connections by default and the ability to enable a pool.</p>

<h4>Persistent connections</h4>

<p>Persistent connections don&rsquo;t offer all of the benefits of pooling, but can often work well enough. Persistent connections is the act of maintaining a connection to your database once it&rsquo;s connected. In the case where you have overhead of 30-50 ms each time you connect this can be quite helpful. At the same time you&rsquo;re limited to the number of things that can be interacting with your databases as you&rsquo;re limited to 1 connection per entry point to your webserver.</p>

<h4>Standalone pooling</h4>

<p>Postgres can be a bit of a sore spot when it comes to handling a ton of connections. For Postgres each connection you have to your database assumes some overhead of memory. Casual observations have seen it be between 5 and 10 MB assuming some basic query workload. And even if you have the memory overhead on your Postgres instance there becomes a point where management of connections becomes a limiting factor, we&rsquo;ve seen this somewhere in the hundreds. While framework level connection poolers can give some better performance and lengthen the time before you have to deal with something more complex if you&rsquo;re successful that time may come.</p>

<p><em>A rule of thumb I&rsquo;d use is if you have over 100 connections you want to look at something more robust</em></p>

<p>In this case that something more robust is a standalone pooler specifically for Postgres. A standalone pooler can be much more configurable overall letting you specify how it works for Postgres sessions, transactions, or statements. Further these are very specifically designed to work with Postgres handling a very large pool of connections without adding too much overhead. In contrast to the 5MB-ish standard connection to Postgres PG Bouncer has a 2kb per connection.</p>

<p>So once you&rsquo;re at the point of needing one there&rsquo;s really two options.</p>

<ol>
<li><a href="http://pgfoundry.org/projects/pgbouncer">PG Bouncer</a></li>
<li><a href="http://www.pgpool.net/mediawiki/index.php/Main_Page">PG Pool</a></li>
</ol>


<h3>PG Bouncer</h3>

<p>My short and sweet recomendation is towards PG Bouncer. Contrary to how it&rsquo;s named PG Pool is a multi purpose tool that does a lot of things (pooling, load balancing, replication, more). PG Bouncer takes the philosophy of doing one thing and doing it extremely well. I tend to favor these types of tools, which is the same reason I lean towards <a href="https://github.com/wal-e/wal-e">WAL-E</a> to help with Postgres replication.</p>

<h3>Need more?</h3>

<p>Need more guidance with setting up and running PGBouncer? Give this <a href="http://datachomp.com/archives/getting-started-with-pgbouncer/">guide</a> a look or try the <a href="https://github.com/gregburek/heroku-buildpack-pgbouncer">pgbouncer buildpack</a> if running on Heroku. If you&rsquo;re still interested in a deeper guide let me know <a href="http://www.twitter.com/craigkerstiens">@craigkerstiens</a> and I&rsquo;ll work on getting it into the queue.</p>

<p>Finally, make sure to sign-up below to get updates on Postgres content and first access to training.</p>

<!-- Begin MailChimp Signup Form -->


<p><link href="//cdn-images.mailchimp.com/embedcode/classic-081711.css" rel="stylesheet" type="text/css"></p>



<div id="mc_embed_signup">
<form action="http://craigkerstiens.us5.list-manage.com/subscribe/post?u=0bb2ad96ec10236507971efdc&amp;id=dacc2c6d9a" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>
<div class="mc-field-group">
    <label for="mce-EMAIL">Email Address  <span class="asterisk">*</span>
</label>
    <input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
</div>
    <div id="mce-responses" class="clear">
        <div class="response" id="mce-error-response" style="display:none"></div>
        <div class="response" id="mce-success-response" style="display:none"></div>
    </div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;"><input type="text" name="b_0bb2ad96ec10236507971efdc_dacc2c6d9a" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
</form>
</div>


<script type="text/javascript">
var fnames = new Array();var ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';
try {
    var jqueryLoaded=jQuery;
    jqueryLoaded=true;
} catch(err) {
    var jqueryLoaded=false;
}
var head= document.getElementsByTagName('head')[0];
if (!jqueryLoaded) {
    var script = document.createElement('script');
    script.type = 'text/javascript';
    script.src = '//ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js';
    head.appendChild(script);
    if (script.readyState && script.onload!==null){
        script.onreadystatechange= function () {
              if (this.readyState == 'complete') mce_preload_check();
        }    
    }
}

var err_style = '';
try{
    err_style = mc_custom_error_style;
} catch(e){
    err_style = '#mc_embed_signup input.mce_inline_error{border-color:#6B0505;} #mc_embed_signup div.mce_inline_error{margin: 0 0 1em 0; padding: 5px 10px; background-color:#6B0505; font-weight: bold; z-index: 1; color:#fff;}';
}
var head= document.getElementsByTagName('head')[0];
var style= document.createElement('style');
style.type= 'text/css';
if (style.styleSheet) {
  style.styleSheet.cssText = err_style;
} else {
  style.appendChild(document.createTextNode(err_style));
}
head.appendChild(style);
setTimeout('mce_preload_check();', 250);

var mce_preload_checks = 0;
function mce_preload_check(){
    if (mce_preload_checks>40) return;
    mce_preload_checks++;
    try {
        var jqueryLoaded=jQuery;
    } catch(err) {
        setTimeout('mce_preload_check();', 250);
        return;
    }
    var script = document.createElement('script');
    script.type = 'text/javascript';
    script.src = 'http://downloads.mailchimp.com/js/jquery.form-n-validate.js';
    head.appendChild(script);
    try {
        var validatorLoaded=jQuery("#fake-form").validate({});
    } catch(err) {
        setTimeout('mce_preload_check();', 250);
        return;
    }
    mce_init_form();
}
function mce_init_form(){
    jQuery(document).ready( function($) {
      var options = { errorClass: 'mce_inline_error', errorElement: 'div', onkeyup: function(){}, onfocusout:function(){}, onblur:function(){}  };
      var mce_validator = $("#mc-embedded-subscribe-form").validate(options);
      $("#mc-embedded-subscribe-form").unbind('submit');//remove the validator so we can get into beforeSubmit on the ajaxform, which then calls the validator
      options = { url: 'http://craigkerstiens.us5.list-manage.com/subscribe/post-json?u=0bb2ad96ec10236507971efdc&id=dacc2c6d9a&c=?', type: 'GET', dataType: 'json', contentType: "application/json; charset=utf-8",
                    beforeSubmit: function(){
                        $('#mce_tmp_error_msg').remove();
                        $('.datefield','#mc_embed_signup').each(
                            function(){
                                var txt = 'filled';
                                var fields = new Array();
                                var i = 0;
                                $(':text', this).each(
                                    function(){
                                        fields[i] = this;
                                        i++;
                                    });
                                $(':hidden', this).each(
                                    function(){
                                        var bday = false;
                                        if (fields.length == 2){
                                            bday = true;
                                            fields[2] = {'value':1970};//trick birthdays into having years
                                        }
                                        if ( fields[0].value=='MM' && fields[1].value=='DD' && (fields[2].value=='YYYY' || (bday && fields[2].value==1970) ) ){
                                            this.value = '';
                                        } else if ( fields[0].value=='' && fields[1].value=='' && (fields[2].value=='' || (bday && fields[2].value==1970) ) ){
                                            this.value = '';
                                        } else {
                                            if (/\[day\]/.test(fields[0].name)){
                                                this.value = fields[1].value+'/'+fields[0].value+'/'+fields[2].value;                                           
                                            } else {
                                                this.value = fields[0].value+'/'+fields[1].value+'/'+fields[2].value;
                                            }
                                        }
                                    });
                            });
                        $('.phonefield-us','#mc_embed_signup').each(
                            function(){
                                var fields = new Array();
                                var i = 0;
                                $(':text', this).each(
                                    function(){
                                        fields[i] = this;
                                        i++;
                                    });
                                $(':hidden', this).each(
                                    function(){
                                        if ( fields[0].value.length != 3 || fields[1].value.length!=3 || fields[2].value.length!=4 ){
                                            this.value = '';
                                        } else {
                                            this.value = 'filled';
                                        }
                                    });
                            });
                        return mce_validator.form();
                    }, 
                    success: mce_success_cb
                };
      $('#mc-embedded-subscribe-form').ajaxForm(options);
      
      
    });
}
function mce_success_cb(resp){
    $('#mce-success-response').hide();
    $('#mce-error-response').hide();
    if (resp.result=="success"){
        $('#mce-'+resp.result+'-response').show();
        $('#mce-'+resp.result+'-response').html(resp.msg);
        $('#mc-embedded-subscribe-form').each(function(){
            this.reset();
        });
    } else {
        var index = -1;
        var msg;
        try {
            var parts = resp.msg.split(' - ',2);
            if (parts[1]==undefined){
                msg = resp.msg;
            } else {
                i = parseInt(parts[0]);
                if (i.toString() == parts[0]){
                    index = parts[0];
                    msg = parts[1];
                } else {
                    index = -1;
                    msg = resp.msg;
                }
            }
        } catch(e){
            index = -1;
            msg = resp.msg;
        }
        try{
            if (index== -1){
                $('#mce-'+resp.result+'-response').show();
                $('#mce-'+resp.result+'-response').html(msg);            
            } else {
                err_id = 'mce_tmp_error_msg';
                html = '<div id="'+err_id+'" style="'+err_style+'"> '+msg+'</div>';
                
                var input_id = '#mc_embed_signup';
                var f = $(input_id);
                if (ftypes[index]=='address'){
                    input_id = '#mce-'+fnames[index]+'-addr1';
                    f = $(input_id).parent().parent().get(0);
                } else if (ftypes[index]=='date'){
                    input_id = '#mce-'+fnames[index]+'-month';
                    f = $(input_id).parent().parent().get(0);
                } else {
                    input_id = '#mce-'+fnames[index];
                    f = $().parent(input_id).get(0);
                }
                if (f){
                    $(f).append(html);
                    $(input_id).focus();
                } else {
                    $('#mce-'+resp.result+'-response').show();
                    $('#mce-'+resp.result+'-response').html(msg);
                }
            }
        } catch(e){
            $('#mce-'+resp.result+'-response').show();
            $('#mce-'+resp.result+'-response').html(msg);
        }
    }
}

</script>


<!--End mc_embed_signup-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Personas, data science, k-means]]></title>
    <link href="http://www.craigkerstiens.com/2014/05/08/personas-data-science-k-means/"/>
    <updated>2014-05-08T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/05/08/personas-data-science-k-means</id>
    <content type="html"><![CDATA[<p><img src="http://cl.ly/image/183R2i1i2946/Untitled.png" style="float:right;margin-left:20px;"> If one of the industry lingo terms in title  didn&rsquo;t make your skin crawl a little then I need to try harder. At the same time you&rsquo;ve probably heard someone use one of them in a non-trolling way in the last month. All three of these can often actually mean the same or similar things, it&rsquo;s just people approach them differently from their world perspective.</p>

<p>Personas don&rsquo;t have to be marketing only speak, and data science doesn&rsquo;t have to be only for stats people. My goal here is to simply set a context for the rest of the meat which talks about how you can simply look at your data and let it surface things you may not have known. <!--more--></p>

<h3>Personas</h3>

<p>I most commonly hear this term from &ldquo;business people&rdquo;. In fact not too long ago I recall interacting with someone that wanted to define personas for a company. They wanted to give them names, Joe and Mary. Joe is a father of 2, he works between 8 and 5, because he has to pick kids up from school, he&rsquo;s always worked at fortune 100 companies. Mary is single, she&rsquo;s a small business owner, she likes using tools instead of building things herself. If you think this is overly exaggerated on what you might expect that&rsquo;s fair. Lets take a company I&rsquo;m fond of <a href="http://www.travisci.com">Travis CI</a>, if someone were to do this for them it might look like:</p>

<ul>
<li>Enterprise QA developer</li>
<li>Startup full stack engineer</li>
<li>Open source contributor</li>
</ul>


<p><em>While this is all fine and good, a name and what they do doesn&rsquo;t help in the substantial way I&rsquo;d like.</em> Sure use personas if it helps you think about who you&rsquo;re building the product for, but don&rsquo;t expect customers to say yes I fit into only this bucket by trying to create classifications like this.</p>

<p><strong>Let&rsquo;s rephrase this to be super simple, groupings of people, no groupings of something that have a likely outcome based on some various inputs. Perhaps a better term for it is archtype</strong></p>

<h3>Data science</h3>

<p>The application of math or statistics to learn something about your business. It doesn&rsquo;t have to be big data, or NoSQL, simply the application of an algorithm to learn something. Extending it a bit, let&rsquo;s assume it&rsquo;s to do something actionable. This is a bit of a chicken and egg, because you can&rsquo;t look at different data the same way everytime and have a valuable intrepretation. Sometimes it requires using several methods and examining the quality of the results. We can apply a little more clarity and judgement to ease this process though.</p>

<h3>k-means</h3>

<p>Alright onto the meat of what I was hoping to dig into here, well actually first a little more of a detour. Tracking key data for your business should be extremely clear. Hopefully you&rsquo;re already doing this, if you&rsquo;re not already tracking <a href="http://www.craigkerstiens.com/2014/02/26/Tracking-MoM-growth-in-SQL/">month over month growth</a> then go implement it today. If you don&rsquo;t know your lifetime value or attrition rate then get on those too. But if you do have that and still are unclear how to move the needle on some goal, maybe that goal is increasing lifetime value then we&rsquo;re at the right place.</p>

<p>An extremely old algorithm for grouping things together and fairly commonly known in stats communities is <a href="http://en.wikipedia.org/wiki/K-means_clustering">k-means</a>. It will group things together based on their likeness into some set, thats where the k comes from, of groups. It&rsquo;s also known as an unsupervised clustering method, because you simply put the data in, and let it create these groupings for you. But why or how is it useful, you know you want to influence lifetime value so you should just find what makes people increase it and move that, well&hellip; we may be able to get there with k-means.</p>

<h3>Practicality</h3>

<p>Most commonly when you search for k-means you&rsquo;ll find some image similar to the one at the top of the post. This image graphically represents the clustering and the center of those clusters. And while visually interesting doesn&rsquo;t actually tell you how to act upon it. A clearer way is actually often by examing the clusters and whats common, this tells you how to actually treat that archtype differently.</p>

<p>In his book <a href="http://www.amazon.com/dp/B00F0WRXI0?tag=mypred-20">Data Smart</a> John Foreman actually does a great job of laying this out in a pratical way. I&rsquo;m particularly partial to his example also because it uses wine as an example. His example generates a variety of groupings, looking at the surrouding meta data its then possible to discover that:</p>

<ul>
<li>Grouping 1 likes Pinot</li>
<li>Grouping 2 likes buying in bulk</li>
<li>Grouping 3 likes buying small volume</li>
<li>Grouping 4 likes bubbly</li>
</ul>


<p>From here you can then start to get some idea of what you&rsquo;d do with this. Perhaps you&rsquo;d create a deal each month so that it appeals to all groups, or target them with different deals. Or maybe you&rsquo;d simply not send an email to them if you didn&rsquo;t have a deal that month. If course you could go more granular down into a recommendation engine to get a personalized recommendation for each customer, but for a lot of smaller apps/sites that&rsquo;s simply not feasible.</p>

<p>So in this case the output would look less like the image at the top and more like a set of 4 groups, then a CSV of every user and which grouping they fall in. Yes, its a less sexy graph, but a much more applicable CSV or excel output.</p>

<p>In the end what we&rsquo;ve really done is define personas or archtypes based on whats similar between customers vs. arbitrary perceptions we may come in with.</p>

<h3>Whats next</h3>

<p>Up next I&rsquo;ll actually dig in on a real world example here. <a href="http://www.twitter.com/alexbaldwin">Alex</a> over at <a href="https://hackdesign.org/">HackDesign</a> was kind enough to give me access to their data to create a more practical example of this. While I&rsquo;m just now digging in, there should be a tangible example of this to follow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Postgres Datatypes – The ones you're not using.]]></title>
    <link href="http://www.craigkerstiens.com/2014/05/07/Postgres-datatypes-the-ones-youre-not-using/"/>
    <updated>2014-05-07T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/05/07/Postgres-datatypes-the-ones-youre-not-using</id>
    <content type="html"><![CDATA[<p><img src="http://cl.ly/image/0V3d2A0w2V0N/Naws__Its_all_just_1_s_and_0_s.png" style="float:right;" />Postgres has a variety of datatypes, in fact quite a few more than most other databases. Most commonly applications take advantage of the standard ones – integers, text, numeric, etc. Almost every application needs these basic types, the rarer ones may be needed less frequently. And while not needed on every application when you do need them they can be an extremely handy. So without further ado let&rsquo;s look at some of these rarer but awesome types.</p>

<h3>hstore</h3>

<p>Yes, I&rsquo;ve talked about <a href="http://www.craigkerstiens.com/2013/07/03/hstore-vs-json/">this one before</a>, yet still not enough people are using it. Of this list of datatypes this is one that could also have benefit for most if not all applications. <!--more-->Hstore is a key-value store directly within Postgres. This means you can easily add new keys and values <em>(optionally)</em>, without haveing to run a migration to setup new columns. Further you can still get great performance by using Gin and GiST indexes with them, which automatically index all keys and values for hstore.</p>

<p><em>It&rsquo;s of note that hstore is an extension and not enabled by default. If you want the ins and outs of getting hands on with it, give the article on <a href="http://postgresguide.com/sexy/hstore.html">Postgres Guide</a> a read.</em></p>

<h3>Range types</h3>

<p>If there is ever a time where you have two columns in your database with one being a from, another being a to, you probably want to be using <a href="http://www.postgresql.org/docs/9.2/static/rangetypes.html">range types</a>. Range types are just that a set of ranges. A super common use of them is when doing anything with calendaring. The place where they really become useful is in their ability to apply constraints on those ranges. This means you can make sure you don&rsquo;t have overlapping time issues, and don&rsquo;t have to rebuild heavy application logic to accomplish it.</p>

<h3>Timestamp with Timezone</h3>

<p>Timestamps are annoying, plain and simple. If you&rsquo;ve re-invented handling different timezones within your application you&rsquo;ve wasted plenty of time and likely done it wrong. If you&rsquo;re using plain timestamps within your application further there&rsquo;s a good chance they dont even mean what you think they mean. Timestamps with timezone or timestamptz automatically includes the timezone with the timestamp. This makes it easy to convert between timezones, know exactly what you&rsquo;re dealing with, and will in short save you a ton of time. There&rsquo;s seldom a case you shouldn&rsquo;t be using these.</p>

<h3>UUID</h3>

<p>Integers as primary keys aren&rsquo;t great. Sure if you&rsquo;re running a small blog they work fine, but if you&rsquo;re application has to scale to a large size then integers can create problems. First you can run out of them, second it can make other details such as sharding a little more annoying. At the same time they are super readable. However, using the actual UUID datatype and extension to automatically generate them can be incredibly handy if you have to scale an application.</p>

<p><em>Similar to hstore, there&rsquo;s an <a href="http://www.postgresql.org/docs/9.3/static/uuid-ossp.html">extension</a> that makes the UUID much more useful.</em></p>

<h3>Binary JSON</h3>

<p>This isn&rsquo;t available yet, but will be in Postgres 9.4. <a href="http://www.craigkerstiens.com/2014/03/24/Postgres-9.4-Looking-up/">Binary JSON</a> is of course JSON directly within your database, but also lets you add Gin indexes directly onto JSON. This means a much simpler setup in not only inserting JSON, but having fast reads. If you want to learn a bit more about this, <a href="http://www.craigkerstiens.com/training/index.html">sign up</a> to <a href="http://www.craigkerstiens.com/training/index.html">get notified</a> of training regarding the upcoming PostgreSQL 9.4 release.</p>

<h3>Money</h3>

<p>Please don&rsquo;t use this&hellip; The money datatype assumes a single currency type, and generally brings with it more caveats than simply using a numeric type.</p>

<h3>More</h3>

<p>It&rsquo;s already been pointed out on twitter that I missed a few. To give a quick highlight of some others:</p>

<ul>
<li><a href="http://www.craigkerstiens.com/2012/08/20/arrays-in-postgres/">Arrays</a></li>
<li>Interval – time intervals, such as &lsquo;1 hour&rsquo;, &lsquo;1 day&rsquo;</li>
<li>ISN &ndash; should help for anything with products</li>
<li>Inet &ndash; Tracking IPs</li>
</ul>


<h3>In conclusion</h3>

<p>What&rsquo;d I miss? What are you&rsquo;re favorite types? Let me know <a href="http://www.twitter.com/craigkerstiens">@craigkerstiens</a>, or sign-up below to updates on Postgres content and first access to training.</p>

<!-- Begin MailChimp Signup Form -->


<p><link href="//cdn-images.mailchimp.com/embedcode/classic-081711.css" rel="stylesheet" type="text/css"></p>



<div id="mc_embed_signup">
<form action="http://craigkerstiens.us5.list-manage.com/subscribe/post?u=0bb2ad96ec10236507971efdc&amp;id=dacc2c6d9a" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
    <h2>Sign up to get weekly advice and content on Postgres</h2>
<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>
<div class="mc-field-group">
    <label for="mce-EMAIL">Email Address  <span class="asterisk">*</span>
</label>
    <input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
</div>
    <div id="mce-responses" class="clear">
        <div class="response" id="mce-error-response" style="display:none"></div>
        <div class="response" id="mce-success-response" style="display:none"></div>
    </div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;"><input type="text" name="b_0bb2ad96ec10236507971efdc_dacc2c6d9a" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
</form>
</div>


<script type="text/javascript">
var fnames = new Array();var ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';
try {
    var jqueryLoaded=jQuery;
    jqueryLoaded=true;
} catch(err) {
    var jqueryLoaded=false;
}
var head= document.getElementsByTagName('head')[0];
if (!jqueryLoaded) {
    var script = document.createElement('script');
    script.type = 'text/javascript';
    script.src = '//ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js';
    head.appendChild(script);
    if (script.readyState && script.onload!==null){
        script.onreadystatechange= function () {
              if (this.readyState == 'complete') mce_preload_check();
        }    
    }
}

var err_style = '';
try{
    err_style = mc_custom_error_style;
} catch(e){
    err_style = '#mc_embed_signup input.mce_inline_error{border-color:#6B0505;} #mc_embed_signup div.mce_inline_error{margin: 0 0 1em 0; padding: 5px 10px; background-color:#6B0505; font-weight: bold; z-index: 1; color:#fff;}';
}
var head= document.getElementsByTagName('head')[0];
var style= document.createElement('style');
style.type= 'text/css';
if (style.styleSheet) {
  style.styleSheet.cssText = err_style;
} else {
  style.appendChild(document.createTextNode(err_style));
}
head.appendChild(style);
setTimeout('mce_preload_check();', 250);

var mce_preload_checks = 0;
function mce_preload_check(){
    if (mce_preload_checks>40) return;
    mce_preload_checks++;
    try {
        var jqueryLoaded=jQuery;
    } catch(err) {
        setTimeout('mce_preload_check();', 250);
        return;
    }
    var script = document.createElement('script');
    script.type = 'text/javascript';
    script.src = 'http://downloads.mailchimp.com/js/jquery.form-n-validate.js';
    head.appendChild(script);
    try {
        var validatorLoaded=jQuery("#fake-form").validate({});
    } catch(err) {
        setTimeout('mce_preload_check();', 250);
        return;
    }
    mce_init_form();
}
function mce_init_form(){
    jQuery(document).ready( function($) {
      var options = { errorClass: 'mce_inline_error', errorElement: 'div', onkeyup: function(){}, onfocusout:function(){}, onblur:function(){}  };
      var mce_validator = $("#mc-embedded-subscribe-form").validate(options);
      $("#mc-embedded-subscribe-form").unbind('submit');//remove the validator so we can get into beforeSubmit on the ajaxform, which then calls the validator
      options = { url: 'http://craigkerstiens.us5.list-manage.com/subscribe/post-json?u=0bb2ad96ec10236507971efdc&id=dacc2c6d9a&c=?', type: 'GET', dataType: 'json', contentType: "application/json; charset=utf-8",
                    beforeSubmit: function(){
                        $('#mce_tmp_error_msg').remove();
                        $('.datefield','#mc_embed_signup').each(
                            function(){
                                var txt = 'filled';
                                var fields = new Array();
                                var i = 0;
                                $(':text', this).each(
                                    function(){
                                        fields[i] = this;
                                        i++;
                                    });
                                $(':hidden', this).each(
                                    function(){
                                        var bday = false;
                                        if (fields.length == 2){
                                            bday = true;
                                            fields[2] = {'value':1970};//trick birthdays into having years
                                        }
                                        if ( fields[0].value=='MM' && fields[1].value=='DD' && (fields[2].value=='YYYY' || (bday && fields[2].value==1970) ) ){
                                            this.value = '';
                                        } else if ( fields[0].value=='' && fields[1].value=='' && (fields[2].value=='' || (bday && fields[2].value==1970) ) ){
                                            this.value = '';
                                        } else {
                                            if (/\[day\]/.test(fields[0].name)){
                                                this.value = fields[1].value+'/'+fields[0].value+'/'+fields[2].value;                                           
                                            } else {
                                                this.value = fields[0].value+'/'+fields[1].value+'/'+fields[2].value;
                                            }
                                        }
                                    });
                            });
                        $('.phonefield-us','#mc_embed_signup').each(
                            function(){
                                var fields = new Array();
                                var i = 0;
                                $(':text', this).each(
                                    function(){
                                        fields[i] = this;
                                        i++;
                                    });
                                $(':hidden', this).each(
                                    function(){
                                        if ( fields[0].value.length != 3 || fields[1].value.length!=3 || fields[2].value.length!=4 ){
                                            this.value = '';
                                        } else {
                                            this.value = 'filled';
                                        }
                                    });
                            });
                        return mce_validator.form();
                    }, 
                    success: mce_success_cb
                };
      $('#mc-embedded-subscribe-form').ajaxForm(options);
      
      
    });
}
function mce_success_cb(resp){
    $('#mce-success-response').hide();
    $('#mce-error-response').hide();
    if (resp.result=="success"){
        $('#mce-'+resp.result+'-response').show();
        $('#mce-'+resp.result+'-response').html(resp.msg);
        $('#mc-embedded-subscribe-form').each(function(){
            this.reset();
        });
    } else {
        var index = -1;
        var msg;
        try {
            var parts = resp.msg.split(' - ',2);
            if (parts[1]==undefined){
                msg = resp.msg;
            } else {
                i = parseInt(parts[0]);
                if (i.toString() == parts[0]){
                    index = parts[0];
                    msg = parts[1];
                } else {
                    index = -1;
                    msg = resp.msg;
                }
            }
        } catch(e){
            index = -1;
            msg = resp.msg;
        }
        try{
            if (index== -1){
                $('#mce-'+resp.result+'-response').show();
                $('#mce-'+resp.result+'-response').html(msg);            
            } else {
                err_id = 'mce_tmp_error_msg';
                html = '<div id="'+err_id+'" style="'+err_style+'"> '+msg+'</div>';
                
                var input_id = '#mc_embed_signup';
                var f = $(input_id);
                if (ftypes[index]=='address'){
                    input_id = '#mce-'+fnames[index]+'-addr1';
                    f = $(input_id).parent().parent().get(0);
                } else if (ftypes[index]=='date'){
                    input_id = '#mce-'+fnames[index]+'-month';
                    f = $(input_id).parent().parent().get(0);
                } else {
                    input_id = '#mce-'+fnames[index];
                    f = $().parent(input_id).get(0);
                }
                if (f){
                    $(f).append(html);
                    $(input_id).focus();
                } else {
                    $('#mce-'+resp.result+'-response').show();
                    $('#mce-'+resp.result+'-response').html(msg);
                }
            }
        } catch(e){
            $('#mce-'+resp.result+'-response').show();
            $('#mce-'+resp.result+'-response').html(msg);
        }
    }
}

</script>


<!--End mc_embed_signup-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What you need to know about April 7 and your security on the web.]]></title>
    <link href="http://www.craigkerstiens.com/2014/04/08/What-you-need-to-know-about-april-7-and-the-web/"/>
    <updated>2014-04-08T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/04/08/What-you-need-to-know-about-april-7-and-the-web</id>
    <content type="html"><![CDATA[<p><img src="http://heartbleed.com/heartbleed.png" style="float:right;margin-left:20px;height:300px;"/>
On April 7 a vulnerability, nicknamed heartbleed, was discovered in a programming library that helps power somewhere over half of the internet. In the most basic sense this library allowed intentional external parties to acquire data that was thought to be safe and secure from whomever was running a vulnerable website. There was little to know one that was except from this due to their security practices, major examples of sites that were affected include:</p>

<ul>
<li>Yahoo</li>
<li>Amazon.com</li>
<li>Netflix</li>
<li>Various banks</li>
<li>Many more</li>
</ul>


<p>If you&rsquo;re interested in more technical details you can <a href="http://www.heartbleed.com">follow along</a> or on the <a href="https://blog.heroku.com/archives/2014/4/8/openssl_heartbleed_security_update">Heroku blog</a>.</p>

<p>The short of it is you, yes you as in everyone, should rotate your passwords once all websites are safe. For further details please continue reading.</p>

<!--more-->


<h3>What does the vulnerability mean</h3>

<p><img src="https://pbs.twimg.com/media/Bks0vXLIUAAaexR.jpg" style="float:right;margin-left:10px;"/> In this case it allowed an external party to acquire a moderate amount of data from some computer running your website. Extremely clear examples (such as shown on the right) highlight an example of random third parties easily acquiring most recently logged in Yahoo mail usernames and passwords.</p>

<h3>The first step</h3>

<p>The first step in resolving this is actually not a step required by you at all, unless you&rsquo;re running a production website online. The first step requires the developers running the site to update their site so they are no longer vulnerable. This as available to happen as early as April 7, and many major sites were fully updated and again safe as of April 8.</p>

<h3>Still area for concern</h3>

<p>With security vulnerabilities there are two key things to consider. First is the vulnerability itself, second is whether its therotical or can be simply acted upon. Yes, there&rsquo;s a range here. One of the most unfortunate pieces from talking to those that know about security is this was extremely trivial to act upon.</p>

<p><em>This is made even worse in that this vulnerability has existed for 2 years without many knowing about it, meaning people have had an ability to snoop and collect parts of your data for two years</em></p>

<h3>What to do?</h3>

<p>First things first, be extremely cautious with any major website you connect with anything important. Any account that you have a password and you care about the account you should cease logging into it <strong>until you know its safe</strong>. As of the morning of April 8 here is a <a href="https://gist.github.com/dberkholz/10169691">list of sites that were safe and ones that were vulnerable</a>. You can check any site today <a href="http://filippo.io/Heartbleed/">here</a>.</p>

<p>Once it&rsquo;s clear that a site you know is now updated and safe either via that list of the latter tool you should change your password. For the time that this has existed and ease of comprimising its safe to assume all of your internet passwords and data within those accounts could have been comprimised. This means any website you have logged into within the last two years you should change the password for. Changing your passwords limits anyone being able to access that again.</p>

<p><em>I am not a security expert or analyst, but have heavily interacted with many that are in dealing with this incident. This advice is high level intended at non technical experts, if you have any questions or feedback please let me know on twitter <a href="http://www.twitter.com/craigkerstiens">@craigkerstiens</a></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some non-traditional marketing tips]]></title>
    <link href="http://www.craigkerstiens.com/2014/03/31/some-short-untypical-marketing-tips/"/>
    <updated>2014-03-31T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/03/31/some-short-untypical-marketing-tips</id>
    <content type="html"><![CDATA[<p>Marketing is generally unexciting to a ton of engineers, until it brings eyeballs which bring feedback and dollars. Marketing doesn&rsquo;t have to always be cheesy campaigns or ads, it can often just be surfacing the things your customers actually do want to care about. My favorite type of marketing is when a service sells me on something at the exact time I want it. Here&rsquo;s a few short tips on some non-traditional marketing that won&rsquo;t seem sleezy but still can work quite well.</p>

<!--more-->


<h3>Email subscriptions to your blog</h3>

<p>RSS is pretty dead, google went and killed it with google reader. Sure there&rsquo;s some decent replacements if you&rsquo;re really tied to it. In particular <a href="http://newsblur.com/">newsblur</a> by <a href="http://www.twitter.com/samuelclay">@samuelclay</a> is a great reader. But now days content emerges on twitter, fb, and ranking services, then later is discovered via search. Both of these work pretty well, but twitter is ephemeral for so many. Email still converts incredibly well, if people are abandoning rss but still care about your content give them the ability for it to be put right in front of their face via email.</p>

<h3>Market in transactional emails</h3>

<p>Have emails that include receipts? Account confirmations? General notices? No not a monthly newsletter! Transactional emails are obviously valuable to your users. Why not include a small call out to your latest announcement? Have a central hook that your emails can check from and simply include a small call to action within there.</p>

<p><em>Credit to <a href="http://www.twitter.com/stevenbristol">@stevenbristol</a> on <a href="http://strongbusinessespodcast.com/16571/149964-episode-17-security-authy-and-disney">strong business podcast</a> for this one</em></p>

<h3>Retarget to your existing users</h3>

<p>In a similar vein of notifying your existing customers in transactional emails about news, you should be doing this all over the web. Retargeting is great to convert people once you&rsquo;ve already got them on a landing page, but its also incredibly useful to get existing users to <a href="http://insideintercom.io/talk-product-strategy-saying/">use a specific feature</a>. If you track if they&rsquo;ve never used a feature retargeting is a great way to make them aware of it, and once they&rsquo;ve used it just count it as a conversion.</p>

<p><em>My favorite retargeting provider <a href="http://www.perfectaudience.com/">perfect audience</a> makes this quite convenient as they allow a bit more control than most retargeting services</em></p>

<h3>In conclusion</h3>

<p>Marketing doesn&rsquo;t have to be throwing your product and messaging in someones face, but you should make your users aware of it. The more engaged they are they more they&rsquo;ll stick around and be happy about using you&rsquo;re product, assuming you&rsquo;ve built a good one. What are some of your favorite tips?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A year's look at Postgres]]></title>
    <link href="http://www.craigkerstiens.com/2014/03/26/a-year-of-postgres/"/>
    <updated>2014-03-26T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/03/26/a-year-of-postgres</id>
    <content type="html"><![CDATA[<p>A couple years back I started more regularly blogging, though I&rsquo;ve done this off and on before, this time I kept some regularity. A common theme started to emerge with some content on Postgres about once a month because most of what was out there was much more reference oriented. A bit after that I connected with <a href="http://www.twitter.com/peterc">petercooper</a>, who runs quite a few weekly email newsletters. As someone thats been interested helping give others a good reason to create content the obvious idea of <a href="http://www.postgresweekly.com">Postgres Weekly</a> emerged.</p>

<p>Since then we&rsquo;ve now had the newsletter running for over a year, helped surface quite a bit of content, and grown to over 5,000 subscribers. First if you&rsquo;re not subscribed, then go <a href="http://www.postgresweekly.com">subscribe now</a>.</p>

<p>And if you need some inspiration or just want to reminisce with me&hellip; here&rsquo;s a look back at a few highlights over the past year:</p>

<!--more-->


<h3>The inagural issue</h3>

<h4><a href="http://postgres-bits.herokuapp.com/?utm_source=craigkerstiens&amp;utm_medium=blog">Postgres: The Bits You Haven&rsquo;t Found</a></h4>

<p>A slide-deck from a presentation at Heroku&rsquo;s Waza conference that highlights many of the more unknown and rare features within Postgres, including &lsquo;WITH&rsquo;, arrays, pub/sub, and hstore.</p>

<h4><a href="http://blog.aggregateknowledge.com/2013/02/04/open-source-release-postgresql-hll/?utm_source=craigkerstiens&amp;utm_medium=blog">Open Source Release:postgresql-hll</a></h4>

<p>Aggregate Knowledge released Postgres HyperLogLog, which is a new Postgres datatype hll that strikes a balance between HyperLogLog and a simple set. This data type solves the problem of calculating uniques for a given data set efficiently both in performance and storage.</p>

<p><em>The above is still one of my favorite extensions that most of the world doesn&rsquo;t know about</em></p>

<h4><a href="http://www.craigkerstiens.com/2013/02/13/How-I-Work-With-Postgres/?utm_source=craigkerstiens&amp;utm_medium=bloga">How I Work with Postgres &ndash; Psql, My PostgreSQL Admin</a></h4>

<p>A common question for anyone new or even experienced with Postgres is whats the best editor out there? Most when they are asking this are asking for a GUI editor, this post highlights much of the power in the CLI &lsquo;psql&rsquo; editor.</p>

<h3>A mix of notable entries</h3>

<h4><a href="http://postgresweekly.com/issues/6">Issue 6</a> <a href="http://blog.blackwinghq.com/2013/04/08/2/?utm_source=craigkerstiens&amp;utm_medium=blog">Dissecting PostgreSQL CVE-2013-1899</a></h4>

<p>After the heavily publicized and very serious security vulnerability was patched last week Blackwing intelligence took the chance to dig in. Read more on the details of the vulnerability such as what damage can be done and the basics of how its exploitable.</p>

<h4><a href="http://postgresweekly.com/issues/16">Issue 16</a> <a href="http://www.justin.tv/sfpug/b/419326732?utm_source=craigkerstiens&amp;utm_medium=blog">Tom Lane Explains Query Planner video</a></h4>

<p>Tom Lane, one of the major contributors to Postgres and on the Postgres core team, was in San Francisco last week and gave a talk at the SF Postgres Users Group. Here&rsquo;s the video from the talk where Tom explains the innards of the PostgreSQL query planner. Whether you&rsquo;re a noob or a knowledgable Postgres user this is a must watch.</p>

<h4><a href="http://postgresweekly.com/issues/35">Issue 35</a> <a href="http://www.chesnok.com/daily/2013/11/06/top-10-psql-commands-i-use/">Top 10 psql ‘\’ commands I use</a></h4>

<p>Psql is incredibly powerful, but the list of options within it can be overwhelming. Heres a straight forward list of @selenamarie’s top 10 commands.</p>

<h4><a href="http://postgresweekly.com/issues/38">Issue 38</a> <a href="http://www.chesnok.com/daily/2013/11/13/everyday-postgres-tuning-a-brand-new-server-the-10-minute-edition/?utm_source=craigkerstiens&amp;utm_medium=blog">Everyday Postgres: Tuning a brand-new server &ndash; the 10 minute edition</a></h4>

<p>After a fresh install, there are probably a few knobs you want to tweak on Postgres. If you’re new to doing this, it can be a bit overwhelming. Here’s a quick primer on tuning a brand new server to be more properly configured.</p>

<h3><a href="http://postgresweekly.com/issues/51">And the latest issue</a></h3>

<p>Which highlights a wealth of information on <a href="http://postgresweekly.com/issues/51">jsonb</a>, and a bit of various knowledge touching on <a href="http://hans.io/blog/2014/03/25/postgresql_cluster/index.html?utm_source=craigkerstiens&amp;utm_medium=blog">cluster</a>, <a href="http://practiceovertheory.com/blog/2013/07/12/recursive-query-is-recursive/?utm_source=craigkerstiens&amp;utm_medium=blog">recursive queries with CTEs</a>, and <a href="http://www.davidhampgonsalves.com/Postgres-ranges/?utm_source=craigkerstiens&amp;utm_medium=blog">range types</a>.</p>

<h3>In conclusion</h3>

<p>What did you like? Any favorites I missed? What would you like to see more of? Let me know <a href="http://www.twitter.com/craigkerstiens">@craigkerstiens</a> or at <a href="mailto:craig.kerstiens@gmail.com">craig.kerstiens at gmail.com</a></p>
]]></content>
  </entry>
  
</feed>
