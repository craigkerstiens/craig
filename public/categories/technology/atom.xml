<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Technology | Craig Kerstiens]]></title>
  <link href="http://www.craigkerstiens.com/categories/technology/atom.xml" rel="self"/>
  <link href="http://www.craigkerstiens.com/"/>
  <updated>2014-05-07T11:27:21-07:00</updated>
  <id>http://www.craigkerstiens.com/</id>
  <author>
    <name><![CDATA[Craig Kerstiens]]></name>
    <email><![CDATA[craig.kerstiens@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Postgres datatypes – the ones you're not using.]]></title>
    <link href="http://www.craigkerstiens.com/2014/05/08/Postgres-datatypes-the-ones-youre-not-using/"/>
    <updated>2014-05-08T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/05/08/Postgres-datatypes-the-ones-youre-not-using</id>
    <content type="html"><![CDATA[<p>Postgres has a variety of datatypes, in fact quite a few more than most other databases. Most commonly applications take advantage of the standard ones – integers, text, numeric, etc. Almost every application needs these basic types, the rarer ones may be needed less frequently. And while not needed on every application when you do need them they can be an extremely handy. So without further adieu let&rsquo;s look at some of these rarer but awesome types.</p>

<h3>hstore</h3>

<p>Yes, I&rsquo;ve talked about this one before, yet still not enough people are using it. Of this list of datatypes this is one that could also have benefit for most if not all applications. Hstore is a key-value store directly within Postgres. This means you can easily add new keys and values <em>(optionally)</em>, without haveing to run a migration to setup new columns. Further you can still get great performance by using Gin and GiST indexes with them, which automatically index all keys and values for hstore.</p>

<h3>Range types</h3>

<p>If there is ever a time where you have two columns in your database with one being a from, another being a to, you probably want to be using range types. Range types are just that a set of ranges. A super common use of them is when doing anything with calendaring. The place where they really become useful is in their ability to apply constraints on those ranges. This means you can make sure you don&rsquo;t have overlapping time issues, and don&rsquo;t have to rebuild heavy application logic to accomplish it.</p>

<h3>Timestamp with Timezone</h3>

<p>Timestamps are annoying, plain and simple. If you&rsquo;ve re-invented handling different timezones within your application you&rsquo;ve wasted plenty of time and likely done it wrong. If you&rsquo;re using plain timestamps within your application further there&rsquo;s a good chance they dont even mean what you think they mean. Timestamps with timezone or timestamptz automatically includes the timezone with the timestamp. This makes it easy to convert between timezones, know exactly what you&rsquo;re dealing with, and will in short save you a ton of time. There&rsquo;s seldom a case you shouldn&rsquo;t be using these.</p>

<h3>UUID</h3>

<p>Integers are primary keys aren&rsquo;t great. Sure if you&rsquo;re running a small blog they work fine, but if you&rsquo;re application has to scale to a large size integers can create problems. First you can run out of them, second it can make other details such as sharding a little more annoying. At the same time they are super readable. However, using the actual UUID datatype and extension to automatically generate them can be incredibly handy if you have to scale an application.</p>

<h3>Binary JSON</h3>

<p>This isn&rsquo;t available yet, but will be in Postgres 9.4. Binary JSON is of course JSON directly within your database, but also lets you add Gin indexes directly onto JSON. This means a much simpler setup in not only inserting JSON, but having fast reads. If you want to learn a bit more about this, <a href="/training/index.html">sign up</a> to <a href="/training/index.html">get notified</a> of training regarding the upcoming PostgreSQL 9.4 release.</p>

<h3>Money</h3>

<p>Please don&rsquo;t use this&hellip; The money datatype assumes a single currency type, and generally brings with it more caveats than simply using a numeric type.</p>

<h3>In conclusion</h3>

<p>What&rsquo;d I miss? What are you&rsquo;re favorite types? Let me know <a href="http://www.twitter.com/craigkerstiens">@craigkerstiens</a>, or sign-up below to updates on Postgres content and first access to training.</p>

<!-- Begin MailChimp Signup Form -->


<p><link href="//cdn-images.mailchimp.com/embedcode/classic-081711.css" rel="stylesheet" type="text/css"></p>



<div id="mc_embed_signup">
<form action="http://postgresweekly.us5.list-manage.com/subscribe/post?u=0bb2ad96ec10236507971efdc&amp;id=dacc2c6d9a" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
    <h3>Sign up to get weekly advice and content on Postgres</h3>
<div class="indicates-required"><span class="asterisk">*</span> indicates required</div>
<div class="mc-field-group">
    <label for="mce-EMAIL">Email Address  <span class="asterisk">*</span>
</label>
    <input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
</div>
    <div id="mce-responses" class="clear">
        <div class="response" id="mce-error-response" style="display:none"></div>
        <div class="response" id="mce-success-response" style="display:none"></div>
    </div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
    <div style="position: absolute; left: -5000px;"><input type="text" name="b_0bb2ad96ec10236507971efdc_dacc2c6d9a" tabindex="-1" value=""></div>
    <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
</form>
</div>




<!--End mc_embed_signup-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What you need to know about April 7 and your security on the web.]]></title>
    <link href="http://www.craigkerstiens.com/2014/04/08/What-you-need-to-know-about-april-7-and-the-web/"/>
    <updated>2014-04-08T00:00:00-07:00</updated>
    <id>http://www.craigkerstiens.com/2014/04/08/What-you-need-to-know-about-april-7-and-the-web</id>
    <content type="html"><![CDATA[<p><img src="http://heartbleed.com/heartbleed.png" style="float:right;margin-left:20px;height:300px;"/>
On April 7 a vulnerability, nicknamed heartbleed, was discovered in a programming library that helps power somewhere over half of the internet. In the most basic sense this library allowed intentional external parties to acquire data that was thought to be safe and secure from whomever was running a vulnerable website. There was little to know one that was except from this due to their security practices, major examples of sites that were affected include:</p>

<ul>
<li>Yahoo</li>
<li>Amazon.com</li>
<li>Netflix</li>
<li>Various banks</li>
<li>Many more</li>
</ul>


<p>If you&rsquo;re interested in more technical details you can <a href="http://www.heartbleed.com">follow along</a> or on the <a href="https://blog.heroku.com/archives/2014/4/8/openssl_heartbleed_security_update">Heroku blog</a>.</p>

<p>The short of it is you, yes you as in everyone, should rotate your passwords once all websites are safe. For further details please continue reading.</p>

<!--more-->


<h3>What does the vulnerability mean</h3>

<p><img src="https://pbs.twimg.com/media/Bks0vXLIUAAaexR.jpg" style="float:right;margin-left:10px;"/> In this case it allowed an external party to acquire a moderate amount of data from some computer running your website. Extremely clear examples (such as shown on the right) highlight an example of random third parties easily acquiring most recently logged in Yahoo mail usernames and passwords.</p>

<h3>The first step</h3>

<p>The first step in resolving this is actually not a step required by you at all, unless you&rsquo;re running a production website online. The first step requires the developers running the site to update their site so they are no longer vulnerable. This as available to happen as early as April 7, and many major sites were fully updated and again safe as of April 8.</p>

<h3>Still area for concern</h3>

<p>With security vulnerabilities there are two key things to consider. First is the vulnerability itself, second is whether its therotical or can be simply acted upon. Yes, there&rsquo;s a range here. One of the most unfortunate pieces from talking to those that know about security is this was extremely trivial to act upon.</p>

<p><em>This is made even worse in that this vulnerability has existed for 2 years without many knowing about it, meaning people have had an ability to snoop and collect parts of your data for two years</em></p>

<h3>What to do?</h3>

<p>First things first, be extremely cautious with any major website you connect with anything important. Any account that you have a password and you care about the account you should cease logging into it <strong>until you know its safe</strong>. As of the morning of April 8 here is a <a href="https://gist.github.com/dberkholz/10169691">list of sites that were safe and ones that were vulnerable</a>. You can check any site today <a href="http://filippo.io/Heartbleed/">here</a>.</p>

<p>Once it&rsquo;s clear that a site you know is now updated and safe either via that list of the latter tool you should change your password. For the time that this has existed and ease of comprimising its safe to assume all of your internet passwords and data within those accounts could have been comprimised. This means any website you have logged into within the last two years you should change the password for. Changing your passwords limits anyone being able to access that again.</p>

<p><em>I am not a security expert or analyst, but have heavily interacted with many that are in dealing with this incident. This advice is high level intended at non technical experts, if you have any questions or feedback please let me know on twitter <a href="http://www.twitter.com/craigkerstiens">@craigkerstiens</a></em></p>
]]></content>
  </entry>
  
</feed>
